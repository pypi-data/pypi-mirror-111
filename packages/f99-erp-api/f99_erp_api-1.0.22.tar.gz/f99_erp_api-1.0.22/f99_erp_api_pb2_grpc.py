# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import f99_erp_api_pb2 as f99__erp__api__pb2


class ErpServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.read_products_free_qty = channel.stream_stream(
        '/ErpService/read_products_free_qty',
        request_serializer=f99__erp__api__pb2.ReadProductsFreeQtyParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.ReadProductsFreeQtyResult.FromString,
        )
    self.create_sale_orders = channel.stream_stream(
        '/ErpService/create_sale_orders',
        request_serializer=f99__erp__api__pb2.CreateSaleOrderParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.CreateSaleOrderResult.FromString,
        )
    self.update_sale_orders_infos = channel.stream_stream(
        '/ErpService/update_sale_orders_infos',
        request_serializer=f99__erp__api__pb2.UpdateSaleOrderInfosParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.UpdateSaleOrderInfosResult.FromString,
        )
    self.replace_sale_orders = channel.stream_stream(
        '/ErpService/replace_sale_orders',
        request_serializer=f99__erp__api__pb2.ReplaceSaleOrderParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.ReplaceSaleOrderResult.FromString,
        )
    self.done_sale_orders = channel.stream_stream(
        '/ErpService/done_sale_orders',
        request_serializer=f99__erp__api__pb2.DoneSaleOrderParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.DoneSaleOrderResult.FromString,
        )
    self.cancel_sale_orders = channel.stream_stream(
        '/ErpService/cancel_sale_orders',
        request_serializer=f99__erp__api__pb2.CancelSaleOrderParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.CancelSaleOrderResult.FromString,
        )
    self.ship_sale_orders = channel.stream_stream(
        '/ErpService/ship_sale_orders',
        request_serializer=f99__erp__api__pb2.ShipSaleOrderParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.ShipSaleOrderResult.FromString,
        )
    self.reship_sale_orders = channel.stream_stream(
        '/ErpService/reship_sale_orders',
        request_serializer=f99__erp__api__pb2.ReshipSaleOrderParams.SerializeToString,
        response_deserializer=f99__erp__api__pb2.ReshipSaleOrderResult.FromString,
        )


class ErpServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def read_products_free_qty(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def create_sale_orders(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def update_sale_orders_infos(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def replace_sale_orders(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def done_sale_orders(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def cancel_sale_orders(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ship_sale_orders(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def reship_sale_orders(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ErpServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'read_products_free_qty': grpc.stream_stream_rpc_method_handler(
          servicer.read_products_free_qty,
          request_deserializer=f99__erp__api__pb2.ReadProductsFreeQtyParams.FromString,
          response_serializer=f99__erp__api__pb2.ReadProductsFreeQtyResult.SerializeToString,
      ),
      'create_sale_orders': grpc.stream_stream_rpc_method_handler(
          servicer.create_sale_orders,
          request_deserializer=f99__erp__api__pb2.CreateSaleOrderParams.FromString,
          response_serializer=f99__erp__api__pb2.CreateSaleOrderResult.SerializeToString,
      ),
      'update_sale_orders_infos': grpc.stream_stream_rpc_method_handler(
          servicer.update_sale_orders_infos,
          request_deserializer=f99__erp__api__pb2.UpdateSaleOrderInfosParams.FromString,
          response_serializer=f99__erp__api__pb2.UpdateSaleOrderInfosResult.SerializeToString,
      ),
      'replace_sale_orders': grpc.stream_stream_rpc_method_handler(
          servicer.replace_sale_orders,
          request_deserializer=f99__erp__api__pb2.ReplaceSaleOrderParams.FromString,
          response_serializer=f99__erp__api__pb2.ReplaceSaleOrderResult.SerializeToString,
      ),
      'done_sale_orders': grpc.stream_stream_rpc_method_handler(
          servicer.done_sale_orders,
          request_deserializer=f99__erp__api__pb2.DoneSaleOrderParams.FromString,
          response_serializer=f99__erp__api__pb2.DoneSaleOrderResult.SerializeToString,
      ),
      'cancel_sale_orders': grpc.stream_stream_rpc_method_handler(
          servicer.cancel_sale_orders,
          request_deserializer=f99__erp__api__pb2.CancelSaleOrderParams.FromString,
          response_serializer=f99__erp__api__pb2.CancelSaleOrderResult.SerializeToString,
      ),
      'ship_sale_orders': grpc.stream_stream_rpc_method_handler(
          servicer.ship_sale_orders,
          request_deserializer=f99__erp__api__pb2.ShipSaleOrderParams.FromString,
          response_serializer=f99__erp__api__pb2.ShipSaleOrderResult.SerializeToString,
      ),
      'reship_sale_orders': grpc.stream_stream_rpc_method_handler(
          servicer.reship_sale_orders,
          request_deserializer=f99__erp__api__pb2.ReshipSaleOrderParams.FromString,
          response_serializer=f99__erp__api__pb2.ReshipSaleOrderResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ErpService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
