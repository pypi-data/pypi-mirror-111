name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust-target: ['i686-pc-windows-msvc', 'x86_64-pc-windows-msvc', 'x86_64-apple-darwin', 'x86_64-unknown-linux-gnu']
        include:
          - rust-target: 'i686-pc-windows-msvc'
            os: windows-latest
            python-arch: x86
          - rust-target: 'x86_64-pc-windows-msvc'
            os: windows-latest
            python-arch: x64
          - rust-target: 'x86_64-unknown-linux-gnu'
            os: ubuntu-latest
            python-arch: x64
          - rust-target: 'x86_64-apple-darwin'
            os: macos-latest
            python-arch: x64
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.rust-target }}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
          architecture: ${{ matrix.python-arch }}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: ${{ matrix.python-arch }}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: ${{ matrix.python-arch }}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: ${{ matrix.python-arch }}
      - name: Install maturin
        run: |
            python -m pip install --upgrade pip
            pip install maturin==0.10
      - name: Build package
        run: |
            maturin build --release --strip --target ${{ matrix.rust-target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lib-${{ matrix.rust-target }}
          path: |
            target/wheels