(self.webpackChunkjupyterlab_novnc=self.webpackChunkjupyterlab_novnc||[]).push([[480],{480:(o,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>d,noVncIcon:()=>r});var t=n(138),s=n(950),a=n(904),c=n(357),l=n(886),i=n(290);const r=new s.LabIcon({name:"jupyterlab-novnc:icon",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0V0z" fill="none"/><path class="jp-icon3 jp-icon-selectable" fill="#616161" d="M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z"/></svg>'});class p extends t.IFrame{constructor(o){super();const e=[];for(const n in o)e.push(encodeURIComponent(n)+"="+encodeURIComponent(o[n]));this.query=e.join("&");const n=l.PageConfig.getBaseUrl();this.url=n+`novnc/app/vnc.html?${this.query}`,console.log("Full URL: ",this.url),this.id="noVNC",this.title.label="noVNC",this.title.icon=r,this.title.closable=!0,this.node.style.overflowY="auto",this.node.style.background="#FFF",this.sandbox=["allow-forms","allow-modals","allow-orientation-lock","allow-pointer-lock","allow-popups","allow-presentation","allow-same-origin","allow-scripts","allow-top-navigation","allow-top-navigation-by-user-activation"]}dispose(){super.dispose()}onCloseRequest(){this.dispose()}}const d={id:"jupyterlab-novnc:plugin",autoStart:!0,requires:[t.ICommandPalette,a.ISettingRegistry],optional:[c.ILauncher],activate:(o,e,n,t)=>{let s,a=[];const c=()=>{const n=s.get("configured_endpoints").composite;let c=0;for(const o of a)o.dispose();a=[];for(const s of n){console.log("Adding comand .. ");const n=`novnc:open:${c}`,l=new p(s),i=o.commands.addCommand(n,{label:`Connect to VNC ${c}: ${"name"in s?s.name:s.host}`,execute:()=>{l.isAttached||o.shell.add(l,"main"),o.shell.activateById(l.id)},icon:r});if(a.push(i),t){const o=t.add({command:n,rank:1,category:"VNC"});a.push(o)}const d=e.addItem({command:n,category:"NoVNC"});a.push(d),c+=1}};n.load("jupyterlab-novnc:plugin").then((o=>{console.log(o),s=o;const e=o.get("configured_endpoints").composite;console.log(e),c(),o.changed.connect(c)})),async function(o="",e={}){const n=i.ServerConnection.makeSettings(),t=l.URLExt.join(n.baseUrl,"novnc",o);let s;try{s=await i.ServerConnection.makeRequest(t,e,n)}catch(o){throw new i.ServerConnection.NetworkError(o)}let a=await s.text();if(a.length>0)try{a=JSON.parse(a)}catch(o){console.log("Not a JSON response body.",s)}if(!s.ok)throw new i.ServerConnection.ResponseError(s,a.message||a);return a}("get_example").then((o=>{console.log(o)})).catch((o=>{console.error(`The jupyterlab-novnc server extension appears to be missing.\n${o}`)}))}}}}]);