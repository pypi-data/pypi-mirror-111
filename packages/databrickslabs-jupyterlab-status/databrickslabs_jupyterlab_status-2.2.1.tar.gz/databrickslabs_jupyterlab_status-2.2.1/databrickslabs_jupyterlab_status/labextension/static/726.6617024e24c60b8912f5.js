(self.webpackChunkdatabricks_status=self.webpackChunkdatabricks_status||[]).push([[726],{726:(t,e,s)=>{"use strict";s.r(e),s.d(e,{dbStatusItem:()=>k,default:()=>g});var a,r=s(761),n=s(527),i=s(271),o=s.n(i),l=s(138),u=s(886),c=s(290),h=s(798);class d{constructor(){this._count=0,this._limit=0,this._delay=0,this.reset()}next(){this._count+=1;var t=this._count%this._delay==0;if(-1!=this._limit&&this._count>this._limit){switch(this._delay){case 1:this._delay=2,this._limit=30;break;case 2:this._delay=5,this._limit=24;break;case 5:default:this._delay=10,this._limit=-1}this._count=1,console.debug("Databrickslabs-jupyterlab: monitoring every",this._delay,"seconds")}return t}reset(){this._count=0,this._limit=60,this._delay=1}}class b extends l.VDomRenderer{constructor(t,e){super(new b.Model({refreshRate:1e3,labShell:t,notebookTracker:e})),this.addClass(n.interactiveItem)}render(){if(!this.model)return null;let t=this.model.currentStatus;return t="UNREACHABLE"===t?"[ "+t+" ] (click here to restart)":"STARTING"===t?"[ "+t+" ] (click here to reconfigure)":"[ "+t+" ]",o().createElement(n.TextItem,{onClick:()=>this.model.handleClick(),title:"Current databricks status",source:t})}}!function(t){class e extends l.VDomModel{constructor(t){super(),this._currentStatus="",this._statusAvailable=!1,this._restarting=!1,this._restarting_count=0,this._dialog_shown=!1,this.counter=new d,this._notebookTracker=t.notebookTracker,t.labShell.restored.then((e=>{this._notebookTracker.forEach((t=>{t.isVisible&&(console.debug("Databrickslabs-jupyterlab: select open notebook"),this.check_status(t.sessionContext))})),this._notebookTracker.currentChanged.connect(((t,e)=>{console.debug("Databrickslabs-jupyterlab: selected notebook changed"),this.check_status()})),t.labShell.currentChanged.connect(((t,e)=>{const{oldValue:s,newValue:a}=e;s&&s.sessionContext.connectionStatusChanged.disconnect(this.onConnectionStatusChange,this),a&&a.sessionContext.connectionStatusChanged.connect(this.onConnectionStatusChange,this)}))})),this._poll=new h.Poll({factory:()=>a.factory(this,t.notebookTracker),frequency:{interval:t.refreshRate,backoff:!0},name:"statusbar-extension:databrickslabs-jupyterlab#status"}),this._poll.ticked.connect((t=>{const{payload:e,phase:s}=t.state;if("resolved"!==s){if("rejected"===s){const t=this._statusAvailable;return this._statusAvailable=!1,this._currentStatus="",void(t&&this.stateChanged.emit())}}else this._updateStatusValues(e)}))}cleanup(){console.info("Databrickslabs-jupyterlab: cleanup"),this._updateStatusValues(null)}onConnectionStatusChange(t,e){console.debug("Databrickslabs-jupyterlab: kernel state changed: "+e),"disconnected"==e?this.cleanup():"connected"==e&&this.check_status()}async check_status(t=null){t||(t=this._notebookTracker.currentWidget.sessionContext),t.ready.then((async()=>{var e=t.kernelDisplayName,s=t.session.kernel.id;const r=await a.request("databrickslabs-jupyterlab-status",e,s);if(r&&r.ok){var n=await r.json();console.debug("Databrickslabs-jupyterlab: check status, result: ",n),"UNREACHABLE"===n.status&&this._updateStatusValues(n)}else r&&console.error("check_status response: unknown",r)}))}_restart_dialog(t){var e,s,r;this._dialog_shown||(this._dialog_shown=!0,"UNREACHABLE"===t?(e="Cluster not reachable",s="Cluster cannot be reached. Check cluster or your network (e.g. VPN) and then press 'Restart' to restart the kernel or cluster",r="Restart"):(e="Reconfigure cluster",s="Reconfigure the cluster, i.e. fix ssh config, install libs, and create Spark Context",r="Reconfigure"),(0,l.showDialog)({title:e,body:s,buttons:[l.Dialog.cancelButton(),l.Dialog.warnButton({label:r})]}).then((t=>{if(t.button.accept){let t=this._notebookTracker.currentWidget.sessionContext;this._notebookTracker.currentWidget.sessionContext.kernelDisplayName;let e=t.session.kernel.id,s=t.kernelDisplayName;a.request("/databrickslabs-jupyterlab-start",s,e),this.counter.reset()}})),this._dialog_shown=!1)}_updateStatusValues(t){const e=this._statusAvailable,s=this._currentStatus;if(console.debug("Databrickslabs-jupyterlab: (old status avail, old current status, value)",e,s,t),null===t)this._statusAvailable=!1,this._currentStatus="";else{var a=t.status;this._statusAvailable=!0,this._currentStatus=a}"UNREACHABLE"===this._currentStatus&&this._currentStatus!==s&&this._restart_dialog(this._currentStatus),this._currentStatus===s&&this._statusAvailable===e||this.stateChanged.emit(void 0)}handleClick(){this._restart_dialog(this.currentStatus)}get restarting_count(){return this._restarting_count}set restarting_count(t){this._restarting_count=t}get restarting(){return this._restarting}set restarting(t){this._restarting=t}get statusAvailable(){return this._statusAvailable}get currentStatus(){return this._currentStatus}dispose(){super.dispose()}}t.Model=e}(b||(b={})),function(t){const e=c.ServerConnection.makeSettings();var s="";async function a(t,s,a){if(s&&"SSH "!=s.slice(0,4))return null;console.debug("Databrickslabs-jupyterlab: request ",t,s,a);var r=new RegExp("^SSH (.+) ([^:]+):(.*)").exec(s),n=r[1],i=r[2],o=u.URLExt.join(e.baseUrl,t);return o=o+"?profile="+i+"&cluster_id="+n+"&id="+a,c.ServerConnection.makeRequest(o,{},e)}t.request=a,t.factory=async function(t,e){let r=e.currentWidget.sessionContext.kernelDisplayName;var n=s!==r;s=r;let i=e.currentWidget.sessionContext.session.kernel.id;var o="Connected"!==t.currentStatus;if(!(t.counter.next()||o||n))return{status:t.currentStatus};{const t=await a("databrickslabs-jupyterlab-status",r,i);if(t.ok)try{return await t.json()}catch(t){throw t}}return null}}(a||(a={}));var _=s(611);const k={id:"statusbar-extension:databrickslabs-jupyterlab#statusbar",autoStart:!0,requires:[n.IStatusBar,_.INotebookTracker,r.ILabShell],activate:(t,e,s,a)=>{let r=new b(a,s);e.registerStatusItem("statusbar-extension:databrickslabs-jupyterlab#statusbar",{item:r,align:"left",rank:2,isActive:()=>r.model.statusAvailable,activeStateChanged:r.model.stateChanged})}},g=[k]}}]);