"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Switch(Component):
    """
    A on/off switch.

    :CSS:

        - ``dazzler-core-switch``
        - ``switch-on``
        - ``switch-off``
        - ``switch-caret``

    :example:

    .. literalinclude:: ../../tests/components/pages/switch.py
    """
    _aspect_keys = []
    _children = []
    value = Aspect()
    rounded = Aspect()
    preset = Aspect(docstring="Preset style colors to apply. (Possible values: 'primary', 'secondary', 'danger', 'warning', 'success')")  # noqa: E501
    size = Aspect(docstring="The size of the switch. (Possible values: 'tiny', 'small', 'medium', 'large', 'larger', 'x-large', 'xx-large')")  # noqa: E501
    on_label = Aspect(children=True)
    off_label = Aspect(children=True)
    class_name = Aspect()
    style = Aspect()

    def __init__(
            self,
            value: typing.Optional[bool] = UNDEFINED,
            rounded: typing.Optional[bool] = UNDEFINED,
            preset: typing.Optional[typing.Any] = UNDEFINED,
            size: typing.Optional[typing.Any] = UNDEFINED,
            on_label: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            off_label: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param value:
        :param rounded:
        :param preset: Preset style colors to apply. (Possible values:
            'primary', 'secondary', 'danger', 'warning', 'success')
        :param size: The size of the switch. (Possible values: 'tiny',
            'small', 'medium', 'large', 'larger', 'x-large', 'xx-large')
        :param on_label:
        :param off_label:
        :param class_name:
        :param style:
        """
        Component.__init__(self, locals(), identity)
