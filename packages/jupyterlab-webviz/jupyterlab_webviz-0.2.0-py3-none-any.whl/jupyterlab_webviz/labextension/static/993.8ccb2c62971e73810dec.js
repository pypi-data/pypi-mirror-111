(self.webpackChunkjupyterlab_webviz=self.webpackChunkjupyterlab_webviz||[]).push([[993],{993:(e,t,o)=>{"use strict";o.r(t),o.d(t,{IWebvizTracker:()=>b,WebvizFactory:()=>v,WebvizWidget:()=>g,default:()=>f,webvizIcon:()=>u});var n=o(761),i=o(55),a=o(138),s=o(950),r=o(357),c=o(621),l=o(797),d=o(886),h=o(904),p=o(290);const u=new s.LabIcon({name:"jupyterlab-webviz:icon",svgstr:'\x3c!--\nCopyright (c) 2018-present, GM Cruise LLC\n\nThis source code is licensed under the Apache License, Version 2.0,\nfound in the LICENSE file in the root directory of this source tree.\nYou may not use this file except in compliance with the License.\n--\x3e\n<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28">\n  <title>\n    webviz\n  </title>\n  <desc>\n    webviz logo\n  </desc>\n  <g fill="none" fill-rule="evenodd" stroke-width="2">\n    <path stroke="#E987FF" d="M11 2.8v14.116l11.29 4.168V5.996L11 2z" opacity=".983"/>\n    <path fill="#20C0FF" fill-opacity=".3" fill-rule="nonzero" stroke="#20C0FF" d="M8 4.8v14.116l11.29 4.168V7.996L8 4z"/>\n    <path stroke="#BD10E0" d="M5 6.8v14.116l11.29 4.168V9.996L5 6z"/>\n  </g>\n</svg>\n'});class w extends a.IFrame{constructor(e){super(),this.query="",this.id="Webviz",this.title.label="Webviz",this.title.closable=!0,this.node.style.overflowY="hidden",this.node.style.background="#FFF",this.sandbox=["allow-forms","allow-modals","allow-orientation-lock","allow-pointer-lock","allow-popups","allow-presentation","allow-same-origin","allow-scripts","allow-top-navigation","allow-top-navigation-by-user-activation"]}trigger(e){const t=[];for(const o in e){const n=o.replace(/[A-Z]/g,(e=>`-${e.toLowerCase()}`));t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[o]))}this.query=t.join("&");const o=d.PageConfig.getBaseUrl();this.url=o+`webviz/app/index.html?${this.query}`,console.log("Full URL: ",this.url)}dispose(){super.dispose()}onCloseRequest(){this.dispose()}}class g extends i.DocumentWidget{constructor(e,t){super(Object.assign({},e)),this.defaultROSEndpoint="",this._ready=new l.PromiseDelegate,this.defaultROSEndpoint=t,this.context.ready.then((()=>{this._onContextReady()}))}_onContentChanged(){console.log("Content changed?")}get ready(){return this._ready.promise}_onContextReady(){this.context.model.contentChanged.connect(this._onContentChanged,this);let e={};try{e=JSON.parse(this.context.model.toString())}catch(e){}this.content.trigger({rosbridgeWebsocketUrl:this.defaultROSEndpoint,layout:JSON.stringify(e)}),this._ready.resolve(void 0)}}class v extends i.ABCWidgetFactory{constructor(e,t){super(e),this.defaultROSEndpoint=t}createNewWidget(e){return new g({context:e,content:new w({})},this.defaultROSEndpoint)}}const b=new l.Token("webviz/track"),y="WebvizFactory",m={id:"jupyterlab-webviz:plugin",autoStart:!0,requires:[c.IFileBrowserFactory,n.ILayoutRestorer],optional:[h.ISettingRegistry,r.ILauncher],activate:async(e,t,o,n,i)=>{console.log("JupyterLab extension jupyterlab-webviz is activated!");let s="ws://localhost:9090";if(n){const e=await n.load(m.id);s=e.get("defaultROSEndpoint").composite,console.log("jupyterlab-webviz settings loaded:",e.composite)}const{commands:r}=e,c=new a.WidgetTracker({namespace:"jupyterlab-webviz"}),l=new v({name:y,fileTypes:["webviz"],defaultFor:["webviz"]},s);o.restore(c,{command:"docmanager:open",args:e=>({path:e.context.path,factory:y}),name:e=>e.context.path}),l.widgetCreated.connect(((e,t)=>{t.title.icon="jp-MaterialIcon ZethusIcon",t.context.pathChanged.connect((()=>{c.save(t)})),c.add(t)})),e.docRegistry.addWidgetFactory(l),e.docRegistry.addFileType({name:"webviz",displayName:"Webviz File",mimeTypes:["application/json"],extensions:[".webviz"],icon:u,fileFormat:"text"}),r.addCommand("webviz:launch",{label:"Webviz",icon:u,caption:"Launch the Webviz viewer",execute:()=>{return e=t.defaultBrowser.model.path,r.execute("docmanager:new-untitled",{path:e,type:"file",ext:".webviz"}).then((e=>r.execute("docmanager:open",{path:e.path,factory:y})));var e}}),i&&i.add({command:"webviz:launch",rank:5,category:"Robotics"}),async function(e="",t={}){const o=p.ServerConnection.makeSettings(),n=d.URLExt.join(o.baseUrl,"webviz",e);let i;try{i=await p.ServerConnection.makeRequest(n,t,o)}catch(e){throw new p.ServerConnection.NetworkError(e)}let a=await i.text();if(a.length>0)try{a=JSON.parse(a)}catch(e){console.log("Not a JSON response body.",i)}if(!i.ok)throw new p.ServerConnection.ResponseError(i,a.message||a);return a}("get_example").then((e=>{console.log(e)})).catch((e=>{console.error(`The jupyterlab-webviz server extension appears to be missing.\n${e}`)}))}},f=m}}]);