# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['east_asian_spacing']

package_data = \
{'': ['*']}

install_requires = \
['fonttools[woff]>=4.13.0', 'uharfbuzz>=0.16.1,<0.17.0']

entry_points = \
{'console_scripts': ['east-asian-spacing = east_asian_spacing.__main__:main']}

setup_kwargs = {
    'name': 'east-asian-spacing',
    'version': '1.1.2',
    'description': 'East Asian Contextual Spacing Build Tools',
    'long_description': '# East Asian Contextual Spacing\n\nThis directory contains tools for\nthe OpenType Contextual Half-width Spacing feature\n("[`chws`]" and "[`vchw`]" feature tags)\nfor Japanese/Chinese/Korean typography.\nThis feature enables the typography described in\n[JLREQ 3.1.2 Positioning of Punctuation Marks (Commas, Periods and Brackets)\n<span lang="ja">句読点や，括弧類などの基本的な配置方法</span>](https://w3c.github.io/jlreq/#positioning_of_punctuation_marks)\nand [CLREQ 3.1.6.1 Punctuation Adjustment Space\n<span lang="zh">标点符号的调整空间 標點符號的調整空間</span>](https://w3c.github.io/clreq/#h-punctuation_adjustment_space).\nFollowing is a figure from JLREQ:\n\n<img src="https://w3c.github.io/jlreq/images/img2_13.png"\n   title="East Asian contextual spacing examples">\n\nYou can find [sample text here](http://kojiishi.github.io/chws/samples.html).\nThe sample page uses fonts built with this tool.\nAlso, early discussion at [Adobe CJK Type blog article]\nmay help to understand the feature better.\n\n[`chws`]: https://docs.microsoft.com/en-us/typography/opentype/spec/features_ae#tag-chws\n[`vchw`]: https://docs.microsoft.com/en-us/typography/opentype/spec/features_uz#tag-vchw\n[Adobe CJK Type blog article]: https://ccjktype.fonts.adobe.com/2018/04/contextual-spacing.html\n\n## Install\n[install]: #install\n\nThere are 3 ways to install this package,\ndepending on your neeeds.\n\n### Clone and Install\n\nIf you may need to diagnose fonts or the code,\ninstalling using [poetry] is recommended:\n```sh\ngit clone https://github.com/kojiishi/east_asian_spacing\ncd east_asian_spacing\npoetry install\npoetry shell\n```\nThis method:\n* Installs the exact versions of dependencies.\n* Installs in the editable mode\n(i.e., [pip "`-e`" option] or setuptools "[development mode]").\n* Installs testing tools too.\nYou can run [unit tests] to verify your installation if needed.\n\n### Command Line Tool\n\nIf all what you need is the command line tool,\n[pipx] can install it globally\nwhile still isolating it in a virtual environment:\n```sh\npipx install east-asian-spacing\n```\nYou can also install with [pip].\nWhen installing with [pip],\nit is still recommended to install into a virtual environment:\n```sh\npython3 -m venv venv\nsource venv/bin/activate\npip install east-asian-spacing\n```\n\n### For Your Python Programs\n\nIf you want to use this tool from your Python programs,\nyou can install using your package management tools\nsuch as [poetry], [pipenv], or [pip].\n```sh\npip install east-asian-spacing\n```\n\n\n[development mode]: https://setuptools.readthedocs.io/en/latest/userguide/development_mode.html\n[editable mode]: https://pip.pypa.io/en/stable/cli/pip_install/#install-editable\n[fonttools]: https://pypi.org/project/fonttools/\n[pip]: https://pip.pypa.io/en/latest/\n[pip "`-e`" option]: https://pip.pypa.io/en/stable/cli/pip_install/#install-editable\n[pipx]: https://pipxproject.github.io/pipx/\n[pipenv]: https://github.com/pypa/pipenv\n[poetry]: https://github.com/python-poetry/poetry\n\n## Adding the feature to your fonts\n\n### Usage\n\nThe following example adds the feature to `input-font-file`\nand saves it to the `build` directory.\n```sh\neast-asian-spacing -o build input-font-file\n```\nThe `--help` option shows the full list of options.\n\n### Languages\n\nBecause the glyph for a code point may vary by languages,\ndifferent tables are desired for different languages.\n\nIn many cases, when the font supports multiple East Asian languages,\nthis tool can detect the languages automatically.\nBut it shows an error when it failed to detect.\nYou need to specify the [OpenType language system tag] of the font in that case.\n\nThe following example specifies that the font is a Japanese font.\n```sh\neast-asian-spacing --language=JAN input-font-file\n```\n\n[OpenType language system tag]: https://docs.microsoft.com/en-us/typography/opentype/spec/languagetags\n\n### TrueType Collection (TTC)\n\nWhen the `input-font-file` is a TrueType Collection (TTC),\nthis tool adds the feature to all fonts in the TTC by default.\n\nIf you want to add the feature to only some of fonts in the TTC,\nyou can specify a comma-separated list of font indices.\nThe following example adds the feature to the font index 0 and 1,\nbut not to other fonts in the TTC.\n```sh\neast-asian-spacing --index=0,1 input-font-file.ttc\n```\n\nThe language option applies to all fonts in the TTC by default.\nWhen you want to specify different languages to each font in the TTC,\nit accepts a comma-separated list.\nThe following example specifies\nKorean for the font index 1,\nSimplified Chinese for the font index 2,\nand automatic for all other fonts.\n```sh\neast-asian-spacing --language=,KOR,ZHS input-font-file.ttc\n```\n\nYou can combine these two options.\nThe following example applies\n`JAN` to the index 2,\nand `ZHS` to the index 3.\nOther fonts in the TTC are not changed.\n```sh\neast-asian-spacing --index=2,3 --language=JAN,ZHS input-font-file.ttc\n```\n\n### Noto CJK\n\nFor [Noto CJK] fonts,\nthis tool has a built-in support\nto determine the font indices and the languages automatically.\n\nWhen the first argument is `noto`, it\na) computes the appropriate language for each font, and\nb) skips `Mono` fonts,\nboth determined by the font name.\n```sh\neast-asian-spacing noto NotoSansCJK.ttc\n```\nYou can also run it for a directory to find all font files recursively.\n```sh\neast-asian-spacing noto ~/googlefonts/noto-cjk\n```\n\n[Noto CJK]: https://www.google.com/get/noto/help/cjk/\n\n### Scripts\n[scripts]: (#scripts)\n\nSome small shell scripts are available in the `scripts` directory.\n\n`build*.sh` scripts are useful to build fonts,\ncompute [diff] from source fonts,\nand compare the diff files with [references].\nFollowings are example usages.\n```sh\n./scripts/build.sh input-font-file.otf -v\n./scripts/build-noto-cjk.sh ~/fonts/noto-cjk -v\n```\n\n### Character-Pairs\n\nSome fonts may not have expected spacings for some characters,\nand you may want to adjust which character-pairs should adjust spacings.\n\nCurrently, this is possible only from a Python program.\nPlease see `test_config` in `tests/test_config.py` for an example.\n\n\n### HarfBuzz\n\nThis package uses the [HarfBuzz] shaping engine\nusing a Cython bindings [uharfbuzz].\n\nYou can use the [hb-shape] command line tool instead\nby settting the `SHAPER` environment variable.\n```sh\nexport SHAPER=hb-shape\n```\n\nTo install [hb-shape] for Linux:\n```sh\nsudo apt get libharfbuzz-bin\n```\nTo install [hb-shape] for Mac with [homebrew]:\n```sh\nbrew install harfbuzz\n```\nInstructions for other platforms may be available at\n[command-not-found.com](https://command-not-found.com/hb-shape).\n\n[HarfBuzz]: https://github.com/harfbuzz/harfbuzz\n[hb-shape]: https://harfbuzz.github.io/utilities.html#utilities-command-line-hbshape\n[homebrew]: https://brew.sh/\n[uharfbuzz]: https://github.com/harfbuzz/uharfbuzz\n\n## Testing\n\n### Test HTML\n\nA [test HTML] is available\nto check the behavior of fonts on browsers.\n\nIt can test fonts you built locally.\nDownload it to your local drive and\nadd your fonts to the "`fonts`" list\nat the beginning of the `<script>` block.\n\n[test HTML]: https://kojiishi.github.io/chws/test.html\n\n### Dump\n[dump]: #dump\n\nThe `dump` sub-command can create various types of text dump files.\n\nThe most simple usage is to show a list of tables.\nThis is similar to the "`-l`" option of [TTX],\nexcept for TrueType Collections (TTC),\nthis tool can show tables of all fonts in the TTC,\nalong with which tables are shared with which fonts.\n```sh\neast-asian-spacing dump build/NotoSansCJK-Regular.ttc\n```\n\nThe "`-o`" option creates table list files in the specified directory:\n```sh\neast-asian-spacing dump -o build/dump build/*.ttc\n```\nThe "`--ttx`" option creates [TTX] text dumps of all tables\nin addition to the table list files.\nThis is similar to the "`-s`" option of [TTX],\nexcept that it can dump all tables in TrueType Collections (TTC).\n```sh\neast-asian-spacing dump -o build/dump --ttx build/*.ttc\n```\n\n[TTX]: https://fonttools.readthedocs.io/en/latest/ttx.html\n\n### Diff\n[diff]: #diff\n\nThe `dump` sub-command can also create\n[dump] files of two font files and compare them.\nThis helps visualizing differences in two fonts,\nspecifically, the font files you created from the original font files.\n```sh\neast-asian-spacing dump -o build/diff --diff source_fonts_dir build/NotoSansCJK.ttc\n```\nThe example above creates following 3 sets of files:\n1. The table list and TTX text dump files for `build/NotoSansCJK.ttc`\n   in the `build/diff/dump` directory.\n2. The table list and TTX text dump files for `source_fonts_dir/NotoSansCJK.ttc`\n   in the `build/diff/src` directory.\n3. Diff files of the two sets of dump files in the `build/diff` directory.\n\nNote:\nThe "`--diff`" option is more efficient than doing all these,\nespecially for large fonts,\nbecause it skips creating TTX of tables when they are binary-equal.\n\nThe `-o` option is optional. When it is omitted,\nthe sub-command ouputs the diff to `stdout`.\n```sh\neast-asian-spacing dump --diff source_fonts_dir build/NotoSansCJK.ttc | less\n```\n\nTo create diff files for all fonts you bulit,\nyou can pipe the output as below:\n```sh\neast-asian-spacing -p *.otf | east-asian-spacing dump -o build/diff -\n```\nThe "`-p`" option prints the input and output font paths to `stdout`\nin the tab-separated-values format.\nThe `dump` sub-command with the "`-`" argument reads this list from `stdin`,\nand creates their text dump and diff files in the `build/diff` directory.\nThe "`--diff`" option is not necessary in this case,\nbecause the source font paths are provided from the pipe.\n\n### References\n[references]: #references\n\nOnce you reviewed the [diff] files created above,\nor tested fonts you build,\nyou can copy the diff files into the `references` directory.\nThen when you want to build them again,\nsuch as when the fonts are updated or when the build environment is changed,\nyou can compare the diff files with the reference files\nto know how new fonts are different from previous builds.\n\nWith the "`-r`" option, the `dump` sub-command\ncreates [diff] files between two font files,\nand compare the diff files\nwith once-reviewed diff files in the `references` directory.\n\nThe typical usage of this option is as below:\n```sh\neast-asian-spacing -p -g=build/glyphs *.otf |\n    east-asian-spacing dump -o=build/diff -r=references -\n```\nPlease see the [Diff] section for the "`-p`" option and piping.\n\nThe `build*.sh` [scripts] include this option.\n\n### Shape Test\n[shape tests]: #shape-test\n\nThe shape testing shapes test strings\nand checks whether the contextual spacing is applied or not.\n\nThe `--test` option sets the level of the shape testing.\n```sh\neast-asian-spacing --test 2 -v -o build input-font-file\n```\nThe level 0 disables the shape testing.\nThe level 1 runs a smoke test using a small set of samples.\nThe level 2 runs the shape testing using a large set of test strings.\n\nThe default value is 1.\n\n### Unit Tests\n[unit tests]: #unit-tests\n\nThis repositry contains unit tests using [pytest].\nThe unit tests include basic functionalities\nincluding [shape tests],\nadding the feature to a test font,\nand comparing it with [references].\n\nIf you used [poetry] to [install],\ntools for unit testing are already installed.\nBefore you run them first time,\nyou need to download fonts for testing:\n```sh\n./tests/download_fonts.py\n```\n\nYou can then run the tests by:\n```sh\npytest\n```\nor run them with multiple versions of Python using [tox]:\n```sh\ntox\n```\n\n[pytest]: https://pytest.org/\n[tox]: https://tox.readthedocs.io/en/latest/index.html\n',
    'author': 'Koji Ishii',
    'author_email': 'kojii@chromium.org',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/kojiishi/east_asian_spacing',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
