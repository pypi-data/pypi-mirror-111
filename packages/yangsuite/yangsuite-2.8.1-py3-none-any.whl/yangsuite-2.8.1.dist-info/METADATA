Metadata-Version: 2.1
Name: yangsuite
Version: 2.8.1
Summary: YANG Suite core application.
Home-page: https://developer.cisco.com
Author: YANG Suite development team
Author-email: yangsuite-support-ext@cisco.com
License: Cisco End User License Agreement
Keywords: yang netconf rfc6020 rfc7950 yangsuite
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.0
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Telecommunications Industry
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows :: Windows 10
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: JavaScript
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: System :: Networking
Classifier: Topic :: System :: Systems Administration
Requires-Python: >=3.5,<3.9
Requires-Dist: appdirs (<2.0.0,>=1.4.3)
Requires-Dist: django (<2.1.0,>=2.0.10)
Requires-Dist: python-json-logger (==0.1.10)
Requires-Dist: python-slugify (<5.0.0,>=4.0.0)
Requires-Dist: packaging (==19.0)
Requires-Dist: whitenoise (<5.0.0,>=4.1.2)
Requires-Dist: django-registration (<3.1,>=3.0)
Requires-Dist: PyGithub (<2.0)
Requires-Dist: docutils (==0.16)
Provides-Extra: core
Requires-Dist: yangsuite-devices ; extra == 'core'
Requires-Dist: yangsuite-filemanager ; extra == 'core'
Requires-Dist: yangsuite-netconf ; extra == 'core'
Requires-Dist: yangsuite-yangtree ; extra == 'core'

Cisco YANG Suite
================

YANG Suite core Django application.

Capable of dynamic discovery of installed application plugins.
Provides common library APIs for logging, filesystem access,
GUI appearance and behavior, and client-server communication.

- Authors:  Members of the Cisco YANG Suite development team.
- Supports: Python 3.6, Python 3.7, Python 3.8

YANG Suite should be installed as a Docker container.

Requires about 3.5GB of memory to load large Cisco native models.

Docker Installation
-------------------

To ensure you have the latest release of the YANG Suite Docker container files,
from a terminal or PowerShell window, git clone https://github.com/CiscoDevNet/yangsuite.git

WARNING:
- Change admin username/password default in docker-compose.yml file first!
- Official SSL/TLS certificate/key needs to be obtained and copied to yangsuite/docker/nginx directory.

Self-signed Certificate for testing
-----------------------------------

The SSL/TLS certificates installed with the nginx container should be obtained or generated using a trusted
certificate authority.  As a convenience you can use the yangsuite/docker/ngins/gen_test_certs.sh script to
generate a self-signed certificate/key to get you going quickly.

After obtaining or generating a certificate/key, run this command in the yangsuite/docker/ directory:

COMMAND:
    docker-compose up

- Official SSL/TLS certificate/key needs to be obtained and copied to yangsuite/docker/nginx directory.

The SSL/TLS certificates installed with the nginx container should be obtained or generated using
a trusted certificate authority.

As a convenience the yangsuite/docker/start_yang_suite.sh script
can generate a self-signed certificate/key to get you going quickly.

The yangsuite/docker/yangsuite/production.py file contains Django settings.

Run start_yang_suite.sh from a bash shell terminal.

Adding/Updating plugins can be done through the Admin-->Manage plugins page or by copying
the plugin wheels into the yangsuite/docker/yangsuite/ directory, uncomment the appropriate
lines in the yangsuite/docker/yangsuite/dockerfile, and run:

COMMAND:
    docker-compose up --build

Access docker with web browser
------------------------------

- Connect to https://localhost NOTE: You will get a complaint about the certificate if it was generated using "start_yang_suite.sh"
- If the default https port 443 is not available for use on your server change the port number in the docker-compose.yml file.
- Login using username set during install.

Python Virtualenv Installation
------------------------------

WARNING: You will not have HTTPS support unless you install a web server like NGINX and frontend it with uwsgi.
Instructions for that can be found searching online.

- Create a python 3.6, 3.7, or 3.8 virtural environment and activate it.
- pip install --upgrade pip
- Type ``pip install yangsuite[core]``
- Use ``yangsuite`` to start the yangsuite server
- You will be prompted to set superuser credentials.
- Connect to http://localhost:8480.
- Login using username set at install.
- Use ctrl-c to stop the yangsuite server

Configuring yangsuite Server
----------------------------

- Activate the virtual environment
- Type ``yangsuite -h``


