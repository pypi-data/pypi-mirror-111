{"version":3,"sources":["webpack://WebComponents/./runestone/clickableArea/js/clickable.js","webpack://WebComponents/./runestone/clickableArea/js/timedclickable.js"],"names":["CAList","ClickableArea","opts","super","orig","this","origElem","divid","id","useRunestoneServices","clickableArray","correctArray","incorrectArray","isTable","undefined","$","data","is","ccArray","split","ciArray","clickIndex","clickableCounter","getQuestion","getFeedback","renderNewElements","caption","addCaption","checkServer","i","childNodes","length","question","feedback","remove","innerHTML","containerDiv","document","createElement","appendChild","addClass","getAttribute","newDiv","newContent","html","slice","createButtons","createFeedbackDiv","replaceWith","submitButton","textContent","attr","class","name","type","onclick","checkCurrentAnswer","logCurrentAnswer","renderFeedback","bind","feedBackDiv","answer","hasStoredAnswers","clickedIndexArray","modifyClickables","ccCounter","ccIndex","ciIndex","modifyTableViaCC","children","modifyViaCC","graderactive","storageObj","localStorage","ex","getItem","localStorageKey","JSON","parse","err","console","log","message","removeItem","restoreAnswers","givenIndexArray","hasClass","push","logBookEvent","event","act","join","div_id","correct","timeStamp","Date","storageObject","timestamp","setItem","stringify","manageNewClickable","removeAttr","Math","floor","tComponentArr","nodeName","tmp","j","t","clickable","toString","self","isAnswered","removeClass","correctNum","incorrectNum","percent","setLocalStorage","css","each","index","closest","eBookConfig","TimedClickableArea","renderTimedIcon","hideButtons","hide","component","timeIconDiv","timeIcon","src","style","className","title","prepend","window","component_factory","clickablearea","timed"],"mappings":"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","file":"338.bundle.js?v=23ab053c44869e271a3f","sourcesContent":["/*==========================================\n=======     Master clickable.js     ========\n============================================\n===   This file contains the JS for the  ===\n===  Runestone clickable area component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/1/15                ===\n==========================================*/\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"../css/clickable.css\";\n\nexport var CAList = {}; // Object that contains all instances of ClickableArea objects\n\nexport default class ClickableArea extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig; // entire <div> element that will be replaced by new HTML\n        this.origElem = orig;\n        this.divid = orig.id;\n        this.useRunestoneServices = opts.useRunestoneServices;\n        this.clickableArray = []; // holds all clickable elements\n        this.correctArray = []; // holds the IDs of all correct clickable span elements, used for eval\n        this.incorrectArray = []; // holds IDs of all incorrect clickable span elements, used for eval\n        //For use with Sphinx-rendered html\n        this.isTable = false;\n        if ($(this.origElem).data(\"cc\") !== undefined) {\n            if ($(this.origElem).is(\"[data-table]\")) {\n                this.isTable = true;\n                this.ccArray = $(this.origElem).data(\"cc\").split(\";\");\n                this.ciArray = $(this.origElem).data(\"ci\").split(\";\");\n            } else {\n                this.ccArray = $(this.origElem).data(\"cc\").split(\",\");\n                this.ciArray = $(this.origElem).data(\"ci\").split(\",\");\n            }\n        }\n        // For use in the recursive replace function\n        this.clickIndex = 0; // Index of this.clickedIndexArray that we're checking against\n        this.clickableCounter = 0; // Index of the current clickable element\n        this.getQuestion();\n        this.getFeedback();\n        this.renderNewElements();\n        this.caption = \"Clickable\";\n        this.addCaption(\"runestone\");\n        this.checkServer(\"clickableArea\", true);\n    }\n    /*===========================\n    == Update basic attributes ==\n    ===========================*/\n    getQuestion() {\n        for (var i = 0; i < this.origElem.childNodes.length; i++) {\n            if ($(this.origElem.childNodes[i]).is(\"[data-question]\")) {\n                this.question = this.origElem.childNodes[i];\n                break;\n            }\n        }\n    }\n    getFeedback() {\n        this.feedback = \"\";\n        for (var i = 0; i < this.origElem.childNodes.length; i++) {\n            if ($(this.origElem.childNodes[i]).is(\"[data-feedback]\")) {\n                this.feedback = this.origElem.childNodes[i];\n            }\n        }\n        if (this.feedback !== \"\") {\n            // Get the feedback element out of the container if the user has defined feedback\n            $(this.feedback).remove();\n            this.feedback = this.feedback.innerHTML;\n        }\n    }\n    /*===========================================\n    ====   Functions generating final HTML   ====\n    ===========================================*/\n    renderNewElements() {\n        // wrapper function for generating everything\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.origElem.id;\n        this.containerDiv.appendChild(this.question);\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.newDiv = document.createElement(\"div\");\n        var newContent = $(this.origElem).html();\n        while (newContent[0] === \"\\n\") {\n            newContent = newContent.slice(1);\n        }\n        this.newDiv.innerHTML = newContent;\n        this.containerDiv.appendChild(this.newDiv);\n        this.createButtons();\n        this.createFeedbackDiv();\n        $(this.origElem).replaceWith(this.containerDiv);\n    }\n    createButtons() {\n        this.submitButton = document.createElement(\"button\"); // Check me button\n        this.submitButton.textContent = \"Check Me\";\n        $(this.submitButton).attr({\n            class: \"btn btn-success\",\n            name: \"do answer\",\n            type: \"button\",\n        });\n        this.submitButton.onclick = function () {\n            this.checkCurrentAnswer();\n            this.logCurrentAnswer();\n            this.renderFeedback();\n        }.bind(this);\n        this.containerDiv.appendChild(this.submitButton);\n    }\n    createFeedbackDiv() {\n        this.feedBackDiv = document.createElement(\"div\");\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(this.feedBackDiv);\n    }\n    /*===================================\n    === Checking/restoring from storage ===\n    ===================================*/\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase or from local storage\n        if (data.answer !== undefined) {\n            // if we got data from the server\n            this.hasStoredAnswers = true;\n            this.clickedIndexArray = data.answer.split(\";\");\n        }\n        if (this.ccArray === undefined) {\n            this.modifyClickables(this.newDiv.childNodes);\n        } else {\n            // For use with Sphinx-rendered HTML\n            this.ccCounter = 0;\n            this.ccIndex = 0;\n            this.ciIndex = 0;\n            if (!this.isTable) {\n                this.modifyViaCC(this.newDiv.children);\n            } else {\n                this.modifyTableViaCC(this.newDiv.children);\n            }\n        }\n    }\n    checkLocalStorage() {\n        if (this.graderactive) {\n            return;\n        }\n        var storageObj;\n        // Gets previous answer data from local storage if it exists\n        this.hasStoredAnswers = false;\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                this.hasStoredAnswers = true;\n                try {\n                    storageObj = JSON.parse(ex);\n                    this.clickedIndexArray = storageObj.answer.split(\";\");\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    this.hasStoredAnswers = false;\n                    this.restoreAnswers({});\n                    return;\n                }\n                if (this.useRunestoneServices) {\n                    // log answer to server\n                    this.givenIndexArray = [];\n                    for (var i = 0; i < this.clickableArray.length; i++) {\n                        if (\n                            $(this.clickableArray[i]).hasClass(\n                                \"clickable-clicked\"\n                            )\n                        ) {\n                            this.givenIndexArray.push(i);\n                        }\n                    }\n                    this.logBookEvent({\n                        event: \"clickableArea\",\n                        act: this.clickedIndexArray.join(\";\"),\n                        div_id: this.divid,\n                        correct: storageObj.correct,\n                    });\n                }\n            }\n        }\n        this.restoreAnswers({}); // pass empty object\n    }\n    setLocalStorage(data) {\n        // Array of the indices of clicked elements is passed to local storage\n        var answer;\n        if (data.answer !== undefined) {\n            // If we got data from the server, we can just use that\n            answer = this.clickedIndexArray.join(\";\");\n        } else {\n            this.givenIndexArray = [];\n            for (var i = 0; i < this.clickableArray.length; i++) {\n                if ($(this.clickableArray[i]).hasClass(\"clickable-clicked\")) {\n                    this.givenIndexArray.push(i);\n                }\n            }\n            answer = this.givenIndexArray.join(\";\");\n        }\n        var timeStamp = new Date();\n        var correct = data.correct;\n        var storageObject = {\n            answer: answer,\n            correct: correct,\n            timestamp: timeStamp,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObject)\n        );\n    }\n    /*==========================\n    === Auxilliary functions ===\n    ==========================*/\n    modifyClickables(childNodes) {\n        // Strips the data-correct/data-incorrect labels and updates the correct/incorrect arrays\n        for (var i = 0; i < childNodes.length; i++) {\n            if (\n                $(childNodes[i]).is(\"[data-correct]\") ||\n                $(childNodes[i]).is(\"[data-incorrect]\")\n            ) {\n                this.manageNewClickable(childNodes[i]);\n                if ($(childNodes[i]).is(\"[data-correct]\")) {\n                    $(childNodes[i]).removeAttr(\"data-correct\");\n                    this.correctArray.push(childNodes[i]);\n                } else {\n                    $(childNodes[i]).removeAttr(\"data-incorrect\");\n                    this.incorrectArray.push(childNodes[i]);\n                }\n            }\n            if (childNodes[i].childNodes.length !== 0) {\n                this.modifyClickables(childNodes[i].childNodes);\n            }\n        }\n    }\n    modifyViaCC(children) {\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].children.length !== 0) {\n                this.modifyViaCC(children[i].children);\n            } else {\n                this.ccCounter++;\n                if (this.ccCounter === Math.floor(this.ccArray[this.ccIndex])) {\n                    this.manageNewClickable(children[i]);\n                    this.correctArray.push(children[i]);\n                    this.ccIndex++;\n                } else if (\n                    this.ccCounter === Math.floor(this.ciArray[this.ciIndex])\n                ) {\n                    this.manageNewClickable(children[i]);\n                    this.incorrectArray.push(children[i]);\n                    this.ciIndex++;\n                }\n            }\n        }\n    }\n    modifyTableViaCC(children) {\n        // table version of modifyViaCC\n        var tComponentArr = [];\n        for (let i = 0; i < children.length; i++) {\n            if (children[i].nodeName === \"TABLE\") {\n                let tmp = children[i];\n                for (let j = 0; j < tmp.children.length; j++) {\n                    if (tmp.children[j].nodeName === \"THEAD\") {\n                        tComponentArr.push(tmp.children[j]);\n                    } else if (tmp.children[j].nodeName === \"TBODY\") {\n                        tComponentArr.push(tmp.children[j]);\n                    } else if (tmp.children[j].nodeName === \"TFOOT\") {\n                        tComponentArr.push(tmp.children[j]);\n                    }\n                }\n            }\n        }\n        for (var t = 0; t < tComponentArr.length; t++) {\n            for (let i = 0; i < tComponentArr[t].children.length; i++) {\n                this.ccCounter++;\n                // First check if the entire row needs to be clickable\n                if (\n                    this.ccIndex < this.ccArray.length &&\n                    this.ccCounter ===\n                        Math.floor(this.ccArray[this.ccIndex].split(\",\")[0]) &&\n                    Math.floor(this.ccArray[this.ccIndex].split(\",\")[1]) === 0\n                ) {\n                    this.manageNewClickable(tComponentArr[t].children[i]);\n                    this.correctArray.push(tComponentArr[t].children[i]);\n                    this.ccIndex++;\n                } else if (\n                    this.ciIndex < this.ciArray.length &&\n                    this.ccCounter ===\n                        Math.floor(this.ciArray[this.ciIndex].split(\",\")[0]) &&\n                    Math.floor(this.ciArray[this.ciIndex].split(\",\")[1]) === 0\n                ) {\n                    this.manageNewClickable(tComponentArr[t].children[i]);\n                    this.incorrectArray.push(tComponentArr[t].children[i]);\n                    this.ciIndex++;\n                } else {\n                    // If not, check the individual data cells\n                    for (\n                        let j = 0;\n                        j < tComponentArr[t].children[i].children.length;\n                        j++\n                    ) {\n                        let tmp = j + 1;\n                        if (\n                            this.ccIndex < this.ccArray.length &&\n                            tmp ===\n                                Math.floor(\n                                    this.ccArray[this.ccIndex].split(\",\")[1]\n                                ) &&\n                            this.ccCounter ===\n                                Math.floor(\n                                    this.ccArray[this.ccIndex].split(\",\")[0]\n                                )\n                        ) {\n                            this.manageNewClickable(\n                                tComponentArr[t].children[i].children[j]\n                            );\n                            this.correctArray.push(\n                                tComponentArr[t].children[i].children[j]\n                            );\n                            this.ccIndex++;\n                        } else if (\n                            this.ciIndex < this.ciArray.length &&\n                            tmp ===\n                                Math.floor(\n                                    this.ciArray[this.ciIndex].split(\",\")[1]\n                                ) &&\n                            this.ccCounter ===\n                                Math.floor(\n                                    this.ciArray[this.ciIndex].split(\",\")[0]\n                                )\n                        ) {\n                            this.manageNewClickable(\n                                tComponentArr[t].children[i].children[j]\n                            );\n                            this.incorrectArray.push(\n                                tComponentArr[t].children[i].children[j]\n                            );\n                            this.ciIndex++;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    manageNewClickable(clickable) {\n        // adds the \"clickable\" functionality\n        $(clickable).addClass(\"clickable\");\n        if (this.hasStoredAnswers) {\n            // Check if the element we're about to append to the pre was in local storage as clicked via its index\n            if (\n                this.clickedIndexArray[this.clickIndex].toString() ===\n                this.clickableCounter.toString()\n            ) {\n                $(clickable).addClass(\"clickable-clicked\");\n                this.clickIndex++;\n                if (this.clickIndex === this.clickedIndexArray.length) {\n                    // Stop doing this if the index array is used up\n                    this.hasStoredAnswers = false;\n                }\n            }\n        }\n        let self = this;\n        clickable.onclick = function () {\n            self.isAnswered = true;\n            if ($(this).hasClass(\"clickable-clicked\")) {\n                $(this).removeClass(\"clickable-clicked\");\n                $(this).removeClass(\"clickable-incorrect\");\n            } else {\n                $(this).addClass(\"clickable-clicked\");\n            }\n        };\n        this.clickableArray.push(clickable);\n        this.clickableCounter++;\n    }\n    /*======================================\n    == Evaluation and displaying feedback ==\n    ======================================*/\n    checkCurrentAnswer() {\n        // Evaluation is done by iterating over the correct/incorrect arrays and checking by class\n        this.correct = true;\n        this.correctNum = 0;\n        this.incorrectNum = 0;\n        for (let i = 0; i < this.correctArray.length; i++) {\n            if (!$(this.correctArray[i]).hasClass(\"clickable-clicked\")) {\n                this.correct = false;\n            } else {\n                this.correctNum++;\n            }\n        }\n        for (let i = 0; i < this.incorrectArray.length; i++) {\n            if ($(this.incorrectArray[i]).hasClass(\"clickable-clicked\")) {\n                this.correct = false;\n                this.incorrectNum++;\n            } else {\n                $(this.incorrectArray[i]).removeClass(\"clickable-incorrect\");\n            }\n        }\n        this.percent =\n            (this.correctNum - this.incorrectNum) / this.correctArray.length;\n        this.setLocalStorage({ correct: this.correct ? \"T\" : \"F\" });\n    }\n\n    logCurrentAnswer() {\n        this.logBookEvent({\n            event: \"clickableArea\",\n            act: this.givenIndexArray.join(\";\"),\n            div_id: this.divid,\n            correct: this.correct ? \"T\" : \"F\",\n        });\n    }\n\n    renderFeedback() {\n        if (this.correct) {\n            $(this.feedBackDiv).html(\"You are Correct!\");\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n        } else {\n            for (let i = 0; i < this.incorrectArray.length; i++) {\n                if ($(this.incorrectArray[i]).hasClass(\"clickable-clicked\")) {\n                    $(this.incorrectArray[i]).addClass(\"clickable-incorrect\");\n                } else {\n                    $(this.incorrectArray[i]).removeClass(\n                        \"clickable-incorrect\"\n                    );\n                }\n            }\n            $(this.feedBackDiv).html(\n                \"Incorrect. You clicked on \" +\n                    this.correctNum +\n                    \" of the \" +\n                    this.correctArray.length.toString() +\n                    \" correct elements and \" +\n                    this.incorrectNum +\n                    \" of the \" +\n                    this.incorrectArray.length.toString() +\n                    \" incorrect elements. \" +\n                    this.feedback\n            );\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-danger\");\n        }\n    }\n\n    disableInteraction() {\n        for (var i = 0; i < this.clickableArray.length; i++) {\n            $(this.clickableArray[i]).css(\"cursor\", \"initial\");\n            this.clickableArray[i].onclick = function () {\n                return;\n            };\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).bind(\"runestone:login-complete\", function () {\n    $(\"[data-component=clickablearea]\").each(function (index) {\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                CAList[this.id] = new ClickableArea({\n                    orig: this,\n                    useRunestoneServices: eBookConfig.useRunestoneServices,\n                });\n            } catch (err) {\n                console.log(`Error rendering ClickableArea Problem ${this.id}\n                             Details: ${err}`);\n            }\n        }\n    });\n});\n","import ClickableArea from \"./clickable.js\";\n\n(\"use strict\");\n\nexport default class TimedClickableArea extends ClickableArea {\n    constructor(opts) {\n        super(opts);\n        this.restoreAnswers({});\n        this.renderTimedIcon(this.containerDiv);\n        this.hideButtons();\n    }\n\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n\n    checkCorrectTimed() {\n        // Returns if the question was correct, incorrect, or skipped (return null in the last case)\n        if (this.correctNum === 0 && this.incorrectNum === 0) {\n            this.correct = null;\n        }\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n\n    hideFeedback() {\n        $(this.feedBackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\nwindow.component_factory.clickablearea = function (opts) {\n    if (opts.timed) {\n        return new TimedClickableArea(opts);\n    }\n    return new ClickableArea(opts);\n};\n"],"sourceRoot":""}