# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _IsotropicWaveletsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWaveletFrequencyInverseUndecimatedPython
else:
    import _itkWaveletFrequencyInverseUndecimatedPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkWaveletFrequencyInverseUndecimatedPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkWaveletFrequencyInverseUndecimatedPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2PD2_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3PD3_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4PD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4PD4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def wavelet_frequency_inverse_undecimated(*args: itkt.ImageLike,  levels: int=..., high_pass_sub_bands: int=..., apply_reconstruction_factors: bool=..., use_wavelet_filter_bank_pyramid: bool=..., wavelet_filter_bank_pyramid=..., inputs=..., input_low_pass=..., inputs_high_pass=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for WaveletFrequencyInverseUndecimated"""
    import itk

    kwarg_typehints = { 'levels':levels,'high_pass_sub_bands':high_pass_sub_bands,'apply_reconstruction_factors':apply_reconstruction_factors,'use_wavelet_filter_bank_pyramid':use_wavelet_filter_bank_pyramid,'wavelet_filter_bank_pyramid':wavelet_filter_bank_pyramid,'inputs':inputs,'input_low_pass':input_low_pass,'inputs_high_pass':inputs_high_pass }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.WaveletFrequencyInverseUndecimated.New(*args, **kwargs)
    return instance.__internal_call__()

def wavelet_frequency_inverse_undecimated_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.IsotropicWavelets.WaveletFrequencyInverseUndecimated
    wavelet_frequency_inverse_undecimated.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    wavelet_frequency_inverse_undecimated.__doc__ = filter_object.__doc__




