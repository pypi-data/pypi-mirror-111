{"taskid": "sceneTest", "evaluation": "excellent", "summary": "<p>You accomplished all core and extra goals. Great job!</p>", "files": [{"filename": "scene.py", "path": "./submissions/perfect/sceneTest/scene.py", "code": "\"\"\"\nscene.py\n\nYour name: Peter Mawhorter\nYour username: pmwh\nSubmission date: 2021-6-28\n\"\"\"\n\nfrom turtleBeads import *\n\npenup()\nlt(90)\nbk(50)\npendown()\n\npensize(8)\ncolor(\"brown\")\nfd(140)\ncolor(\"DarkGreen\", \"Green\")\nbegin_fill()\ndrawCircle(50)\nend_fill()\n"}], "warnings": [], "table": [{"description": ["Procedure Requirements", "What code you use to solve the problem.", "Procedure Requirements", "Code checks which require that your code is written in a certain way, regardless of what happens when it runs (e.g., how many lines of code call a certain function)."], "tags": {"category": "type_group", "goal_type": "procedure"}, "status": "accomplished", "explanation": "Accomplished all core and extra procedure goals.", "subtable": [{"description": ["Core goals", "Complete all core goals for core credit. Get partial credit for completing at least half, and more partial credit for completing at least 90%."], "tags": {"category": "core", "goal_type": "procedure"}, "status": "accomplished", "explanation": "Accomplished all 3 goals.", "subtable": [{"status": "accomplished", "notes": ["Found on line(s): <a class=\"lineref\" href=\"#sceneTest_scene_codeline_9\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_9'); return true;\">9</a>"], "warnings": [], "explanation": "Expected exactly 1 import of everything from the turtleBeads module, found 1.", "subtable": [], "description": ["Import everything from the turtleBeads module", "We will check to make sure that you import everything from the turtleBeads module.", "Import everything from the turtleBeads module", "We examined your code to check whether it imports everything from the turtleBeads module."], "tags": {"category": "core", "goal_type": "procedure"}}, {"status": "accomplished", "notes": ["Found on line(s): <a class=\"lineref\" href=\"#sceneTest_scene_codeline_18\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_18'); return true;\">18</a>, <a class=\"lineref\" href=\"#sceneTest_scene_codeline_13\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_13'); return true;\">13</a>"], "warnings": [], "explanation": "Expected at least 1 call to <code>forward</code>, found 2.", "subtable": [], "description": ["Call <code>forward</code>", "Call <code>forward</code>, <code>fd</code>, <code>backward</code>, <code>bk</code>, or <code>back</code> in at least once place.", "Call <code>forward</code>", "Call <code>forward</code>, <code>fd</code>, <code>backward</code>, <code>bk</code>, or <code>back</code> in at least once place."], "tags": {"category": "core", "goal_type": "procedure"}}, {"status": "accomplished", "notes": ["Found on line(s): <a class=\"lineref\" href=\"#sceneTest_scene_codeline_12\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_12'); return true;\">12</a>"], "warnings": [], "explanation": "Expected at least 1 call to <code>left</code>, found 1.", "subtable": [], "description": ["Call <code>left</code>", "Call <code>left</code>, <code>lt</code>, <code>right</code>, or <code>rt</code> in at least once place.", "Call <code>left</code>", "Call <code>left</code>, <code>lt</code>, <code>right</code>, or <code>rt</code> in at least once place."], "tags": {"category": "core", "goal_type": "procedure"}}]}, {"description": ["Extra goals", "Complete all extra goals in addition to the core goals for a perfect score."], "tags": {"category": "extra", "goal_type": "procedure"}, "status": "accomplished", "explanation": "Accomplished all 4 goals.", "subtable": [{"status": "accomplished", "notes": ["Found on line(s): <a class=\"lineref\" href=\"#sceneTest_scene_codeline_21\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_21'); return true;\">21</a>"], "warnings": [], "explanation": "Expected at least 1 call to <code>drawCircle</code>, found 1.", "subtable": [], "description": ["Call <code>drawCircle</code>", "Call <code>drawCircle</code> in at least once place.", "Call <code>drawCircle</code>", "Call <code>drawCircle</code> in at least once place."], "tags": {"category": "extra", "goal_type": "procedure"}}, {"status": "accomplished", "notes": ["Found on line(s): <a class=\"lineref\" href=\"#sceneTest_scene_codeline_17\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_17'); return true;\">17</a>, <a class=\"lineref\" href=\"#sceneTest_scene_codeline_19\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_19'); return true;\">19</a>"], "warnings": [], "explanation": "Expected at least 1 call to <code>pencolor</code>, found 2.", "subtable": [], "description": ["Call <code>pencolor</code>", "Call <code>pencolor</code> or <code>color</code> in at least once place.", "Call <code>pencolor</code>", "Call <code>pencolor</code> or <code>color</code> in at least once place."], "tags": {"category": "extra", "goal_type": "procedure"}}, {"status": "accomplished", "notes": ["Found on line(s): <a class=\"lineref\" href=\"#sceneTest_scene_codeline_20\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_20'); return true;\">20</a>"], "warnings": [], "explanation": "Expected at least 1 call to <code>begin_fill</code>, found 1.", "subtable": [], "description": ["Call <code>begin_fill</code>", "Call <code>begin_fill</code> in at least once place.", "Call <code>begin_fill</code>", "Call <code>begin_fill</code> in at least once place."], "tags": {"category": "extra", "goal_type": "procedure"}}, {"status": "accomplished", "notes": ["Found on line(s): <a class=\"lineref\" href=\"#sceneTest_scene_codeline_22\" onclick=\"focusCodeLine('sceneTest_code_scene', 'sceneTest_scene_codeline_22'); return true;\">22</a>"], "warnings": [], "explanation": "Expected at least 1 call to <code>end_fill</code>, found 1.", "subtable": [], "description": ["Call <code>end_fill</code>", "Call <code>end_fill</code> in at least once place.", "Call <code>end_fill</code>", "Call <code>end_fill</code> in at least once place."], "tags": {"category": "extra", "goal_type": "procedure"}}]}]}], "contexts": [{"description": "<div class=\"topic\">File 'scene.py' <details class=\"help_button\">\n<summary aria-label=\"More details\"></summary>\n<div class=\"help\">We will evaluate your submitted file 'scene.py'.</div>\n</details>\n</div>", "depends": [1], "level": 0, "value": "Evaluating 'scene.py'"}, {"description": "<div class=\"topic\">Code in the target file <details class=\"help_button\">\n<summary aria-label=\"More details\"></summary>\n<div class=\"help\">We parsed the code in the target file and paidattention to how it was written.</div>\n</details>\n</div>", "depends": [], "level": 1, "value": "The code for 'scene.py' (shown elsewhere)."}], "timestamp": "20210628@17:48:39"}