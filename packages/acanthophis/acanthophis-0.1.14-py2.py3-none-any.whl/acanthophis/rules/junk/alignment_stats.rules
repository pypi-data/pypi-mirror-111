localrules: bamstat_samps
rule bamstat_samps:
    input:
        "data/alignments/samples/{aligner}/{ref}/{sample}.bam",
    output:
        "data/alignments/bamstats/sample/{aligner}~{ref}~{sample}.tsv",
    log:
        "data/log/bamstats_sample/{aligner}~{ref}~{sample}.tsv"
    shell:
        "(samtools stats -i 5000 -x {input} >{output}) >{log}"

rule qualimap_samp:
    input:
        bam="data/alignments/samples/{aligner}/{ref}/{sample}.bam",
    output:
        directory("data/alignments/qualimap/samples/{aligner}~{ref}~{sample}/"),
    log:
        "data/log/qualimap_sample/{aligner}~{ref}~{sample}.log"
    threads: 4
    shell:
        "( unset DISPLAY; qualimap bamqc"
        "   --java-mem-size=6G"
        "   -bam {input.bam}"
        "   -nr 10000"
        "   -nt {threads}"
        "   -outdir {output}"
        "   {input}"
        " ) >{log} 2>&1"


localrules: align_qualimap_samples
rule align_qualimap_samples:
    input:
        expand("data/alignments/qualimap/samples/{aligner}~{ref}~{sample}/",
               aligner=config["mapping"]["aligners"],
               ref=config["mapping"]["refs"],
               sample=SAMP2RUNLIB),


localrules: align_stats
rule align_stats:
    input:
        expand("data/alignments/bamstats/sample/{aligner}~{ref}~{sample}.tsv",
               aligner=config["mapping"]["aligners"],
               ref=config["mapping"]["refs"],
               sample=SAMPLESETS["all_samples"]),
    output:
        expand("data/alnstats/everything_{type}.csv",
               type=["SN", "IS", "COV"])
    log: "data/log/bamstats/mergeallbamstats.log"
    shell:
        "python3 ./scripts/tidybamstat.py"
        "   -o data/alnstats/everything"  # prefix
        "   {input}"
        " >{log} 2>&1"

