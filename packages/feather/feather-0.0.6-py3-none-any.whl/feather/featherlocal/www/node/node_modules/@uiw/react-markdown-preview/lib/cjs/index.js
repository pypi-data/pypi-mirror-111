"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _react = _interopRequireWildcard(require("react"));

var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

var _remarkGfm = _interopRequireDefault(require("remark-gfm"));

var _remarkSlug = _interopRequireDefault(require("remark-slug"));

var _remarkAutolinkHeadings = _interopRequireDefault(require("remark-autolink-headings"));

var _rehypeRaw = _interopRequireDefault(require("rehype-raw"));

var _rehypePrism = _interopRequireDefault(require("@mapbox/rehype-prism"));

var _rehypeRewrite = _interopRequireDefault(require("rehype-rewrite"));

// @ts-ignore
// @ts-ignore
var rehypeRewriteHandle = function rehypeRewriteHandle(node, index, parent) {
  if (node.type === 'element' && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName) && index !== 0) {
    var child = node.children && node.children[0] ? node.children[0] : null;

    if (child && child.properties && child.properties.ariaHidden === 'true') {
      child.properties = (0, _objectSpread2.default)({
        class: 'anchor'
      }, child.properties);
      child.children = [{
        type: 'element',
        tagName: 'svg',
        properties: {
          class: 'octicon octicon-link',
          viewBox: '0 0 16 16',
          version: '1.1',
          width: '16',
          height: '16',
          ariaHidden: 'true'
        },
        children: [{
          type: 'element',
          tagName: 'path',
          properties: {
            fillRule: 'evenodd',
            d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'
          }
        }]
      }];
    }
  }
};

var _default = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _ref = props || {},
      className = _ref.className,
      source = _ref.source,
      style = _ref.style,
      onScroll = _ref.onScroll,
      onMouseOver = _ref.onMouseOver,
      _ref$warpperElement = _ref.warpperElement,
      warpperElement = _ref$warpperElement === void 0 ? {} : _ref$warpperElement,
      other = (0, _objectWithoutProperties2.default)(_ref, ["className", "source", "style", "onScroll", "onMouseOver", "warpperElement"]);

  var mdp = /*#__PURE__*/_react.default.createRef();

  (0, _react.useImperativeHandle)(ref, function () {
    return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {
      mdp: mdp
    });
  }, [mdp, props]);
  var cls = "wmde-markdown wmde-markdown-color ".concat(className || '');
  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    ref: mdp,
    onScroll: onScroll,
    onMouseOver: onMouseOver
  }, warpperElement, {
    className: cls,
    style: style
  }), /*#__PURE__*/_react.default.createElement(_reactMarkdown.default, (0, _extends2.default)({}, other, {
    rehypePlugins: [[_rehypePrism.default, {
      ignoreMissing: true
    }], [_rehypeRewrite.default, rehypeRewriteHandle], _rehypeRaw.default].concat((0, _toConsumableArray2.default)(other.rehypePlugins || [])),
    remarkPlugins: [_remarkSlug.default, _remarkAutolinkHeadings.default].concat((0, _toConsumableArray2.default)(other.remarkPlugins || []), [_remarkGfm.default]),
    children: source || ''
  })));
});

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmRleC50c3giXSwibmFtZXMiOlsicmVoeXBlUmV3cml0ZUhhbmRsZSIsIm5vZGUiLCJpbmRleCIsInBhcmVudCIsInR5cGUiLCJ0ZXN0IiwidGFnTmFtZSIsImNoaWxkIiwiY2hpbGRyZW4iLCJwcm9wZXJ0aWVzIiwiYXJpYUhpZGRlbiIsImNsYXNzIiwidmlld0JveCIsInZlcnNpb24iLCJ3aWR0aCIsImhlaWdodCIsImZpbGxSdWxlIiwiZCIsIlJlYWN0IiwiZm9yd2FyZFJlZiIsInByb3BzIiwicmVmIiwiY2xhc3NOYW1lIiwic291cmNlIiwic3R5bGUiLCJvblNjcm9sbCIsIm9uTW91c2VPdmVyIiwid2FycHBlckVsZW1lbnQiLCJvdGhlciIsIm1kcCIsImNyZWF0ZVJlZiIsImNscyIsInJlaHlwZVByaXNtIiwiaWdub3JlTWlzc2luZyIsInJlaHlwZVJld3JpdGUiLCJyZWh5cGVSYXciLCJyZWh5cGVQbHVnaW5zIiwic2x1ZyIsImhlYWRpbmdzIiwicmVtYXJrUGx1Z2lucyIsImdmbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQU5BO0FBRUE7QUFRQSxJQUFNQSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQUNDLElBQUQsRUFBWUMsS0FBWixFQUEyQkMsTUFBM0IsRUFBMkM7QUFDckUsTUFBSUYsSUFBSSxDQUFDRyxJQUFMLEtBQWMsU0FBZCxJQUEyQkQsTUFBTSxDQUFDQyxJQUFQLEtBQWdCLE1BQTNDLElBQXFELGlCQUFpQkMsSUFBakIsQ0FBc0JKLElBQUksQ0FBQ0ssT0FBM0IsQ0FBckQsSUFBNEZKLEtBQUssS0FBSyxDQUExRyxFQUE2RztBQUMzRyxRQUFNSyxLQUFLLEdBQUdOLElBQUksQ0FBQ08sUUFBTCxJQUFpQlAsSUFBSSxDQUFDTyxRQUFMLENBQWMsQ0FBZCxDQUFqQixHQUFvQ1AsSUFBSSxDQUFDTyxRQUFMLENBQWMsQ0FBZCxDQUFwQyxHQUF1RCxJQUFyRTs7QUFDQSxRQUFJRCxLQUFLLElBQUlBLEtBQUssQ0FBQ0UsVUFBZixJQUE2QkYsS0FBSyxDQUFDRSxVQUFOLENBQWlCQyxVQUFqQixLQUFnQyxNQUFqRSxFQUF5RTtBQUN2RUgsTUFBQUEsS0FBSyxDQUFDRSxVQUFOO0FBQXFCRSxRQUFBQSxLQUFLLEVBQUU7QUFBNUIsU0FBeUNKLEtBQUssQ0FBQ0UsVUFBL0M7QUFDQUYsTUFBQUEsS0FBSyxDQUFDQyxRQUFOLEdBQWlCLENBQ2Y7QUFDRUosUUFBQUEsSUFBSSxFQUFFLFNBRFI7QUFFRUUsUUFBQUEsT0FBTyxFQUFFLEtBRlg7QUFHRUcsUUFBQUEsVUFBVSxFQUFFO0FBQ1ZFLFVBQUFBLEtBQUssRUFBRSxzQkFERztBQUVWQyxVQUFBQSxPQUFPLEVBQUUsV0FGQztBQUdWQyxVQUFBQSxPQUFPLEVBQUUsS0FIQztBQUlWQyxVQUFBQSxLQUFLLEVBQUUsSUFKRztBQUtWQyxVQUFBQSxNQUFNLEVBQUUsSUFMRTtBQU1WTCxVQUFBQSxVQUFVLEVBQUU7QUFORixTQUhkO0FBV0VGLFFBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VKLFVBQUFBLElBQUksRUFBRSxTQURSO0FBRUVFLFVBQUFBLE9BQU8sRUFBRSxNQUZYO0FBR0VHLFVBQUFBLFVBQVUsRUFBRTtBQUNWTyxZQUFBQSxRQUFRLEVBQUUsU0FEQTtBQUVWQyxZQUFBQSxDQUFDLEVBQUU7QUFGTztBQUhkLFNBRFE7QUFYWixPQURlLENBQWpCO0FBd0JEO0FBQ0Y7QUFDRixDQS9CRDs7NEJBOENlQyxlQUFNQyxVQUFOLENBQTJELFVBQUNDLEtBQUQsRUFBUUMsR0FBUixFQUFnQjtBQUN4RixhQUE0RkQsS0FBSyxJQUFJLEVBQXJHO0FBQUEsTUFBUUUsU0FBUixRQUFRQSxTQUFSO0FBQUEsTUFBbUJDLE1BQW5CLFFBQW1CQSxNQUFuQjtBQUFBLE1BQTJCQyxLQUEzQixRQUEyQkEsS0FBM0I7QUFBQSxNQUFrQ0MsUUFBbEMsUUFBa0NBLFFBQWxDO0FBQUEsTUFBNENDLFdBQTVDLFFBQTRDQSxXQUE1QztBQUFBLGlDQUF5REMsY0FBekQ7QUFBQSxNQUF5REEsY0FBekQsb0NBQTBFLEVBQTFFO0FBQUEsTUFBaUZDLEtBQWpGOztBQUNBLE1BQU1DLEdBQUcsZ0JBQUdYLGVBQU1ZLFNBQU4sRUFBWjs7QUFDQSxrQ0FBb0JULEdBQXBCLEVBQXlCO0FBQUEsdUVBQVlELEtBQVo7QUFBbUJTLE1BQUFBLEdBQUcsRUFBSEE7QUFBbkI7QUFBQSxHQUF6QixFQUFvRCxDQUFDQSxHQUFELEVBQU1ULEtBQU4sQ0FBcEQ7QUFDQSxNQUFNVyxHQUFHLCtDQUF3Q1QsU0FBUyxJQUFJLEVBQXJELENBQVQ7QUFDQSxzQkFDRTtBQUFLLElBQUEsR0FBRyxFQUFFTyxHQUFWO0FBQWUsSUFBQSxRQUFRLEVBQUVKLFFBQXpCO0FBQW1DLElBQUEsV0FBVyxFQUFFQztBQUFoRCxLQUFpRUMsY0FBakU7QUFBaUYsSUFBQSxTQUFTLEVBQUVJLEdBQTVGO0FBQWlHLElBQUEsS0FBSyxFQUFFUDtBQUF4RyxtQkFDRSw2QkFBQyxzQkFBRCw2QkFDTUksS0FETjtBQUVFLElBQUEsYUFBYSxHQUFHLENBQUNJLG9CQUFELEVBQWM7QUFBRUMsTUFBQUEsYUFBYSxFQUFFO0FBQWpCLEtBQWQsQ0FBSCxFQUEyQyxDQUFDQyxzQkFBRCxFQUFnQmxDLG1CQUFoQixDQUEzQyxFQUFpRm1DLGtCQUFqRiwwQ0FBZ0dQLEtBQUssQ0FBQ1EsYUFBTixJQUF1QixFQUF2SCxFQUZmO0FBR0UsSUFBQSxhQUFhLEdBQUlDLG1CQUFKLEVBQVVDLCtCQUFWLDBDQUF3QlYsS0FBSyxDQUFDVyxhQUFOLElBQXVCLEVBQS9DLElBQW9EQyxrQkFBcEQsRUFIZjtBQUlFLElBQUEsUUFBUSxFQUFFakIsTUFBTSxJQUFJO0FBSnRCLEtBREYsQ0FERjtBQVVELENBZmMsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VJbXBlcmF0aXZlSGFuZGxlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSAncmVhY3QtbWFya2Rvd24nO1xuaW1wb3J0IGdmbSBmcm9tICdyZW1hcmstZ2ZtJztcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCBzbHVnIGZyb20gJ3JlbWFyay1zbHVnJztcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCBoZWFkaW5ncyBmcm9tICdyZW1hcmstYXV0b2xpbmstaGVhZGluZ3MnXG5pbXBvcnQgcmVoeXBlUmF3IGZyb20gJ3JlaHlwZS1yYXcnO1xuaW1wb3J0IHJlaHlwZVByaXNtIGZyb20gJ0BtYXBib3gvcmVoeXBlLXByaXNtJztcbmltcG9ydCByZWh5cGVSZXdyaXRlIGZyb20gJ3JlaHlwZS1yZXdyaXRlJztcbmltcG9ydCAnLi9zdHlsZXMvbWFya2Rvd24ubGVzcyc7XG5pbXBvcnQgJy4vc3R5bGVzL21hcmtkb3duY29sb3IubGVzcyc7XG5cbmNvbnN0IHJlaHlwZVJld3JpdGVIYW5kbGUgPSAobm9kZTogYW55LCBpbmRleDogbnVtYmVyLCBwYXJlbnQ6IGFueSkgPT4ge1xuICBpZiAobm9kZS50eXBlID09PSAnZWxlbWVudCcgJiYgcGFyZW50LnR5cGUgPT09ICdyb290JyAmJiAvaCgxfDJ8M3w0fDV8NikvLnRlc3Qobm9kZS50YWdOYW1lKSAmJiBpbmRleCAhPT0gMCkge1xuICAgIGNvbnN0IGNoaWxkID0gbm9kZS5jaGlsZHJlbiAmJiBub2RlLmNoaWxkcmVuWzBdID8gbm9kZS5jaGlsZHJlblswXSA6IG51bGw7XG4gICAgaWYgKGNoaWxkICYmIGNoaWxkLnByb3BlcnRpZXMgJiYgY2hpbGQucHJvcGVydGllcy5hcmlhSGlkZGVuID09PSAndHJ1ZScpIHtcbiAgICAgIGNoaWxkLnByb3BlcnRpZXMgPSB7IGNsYXNzOiAnYW5jaG9yJywgLi4uY2hpbGQucHJvcGVydGllcyB9O1xuICAgICAgY2hpbGQuY2hpbGRyZW4gPSBbXG4gICAgICAgIHtcbiAgICAgICAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgICAgICAgdGFnTmFtZTogJ3N2ZycsXG4gICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgY2xhc3M6ICdvY3RpY29uIG9jdGljb24tbGluaycsXG4gICAgICAgICAgICB2aWV3Qm94OiAnMCAwIDE2IDE2JyxcbiAgICAgICAgICAgIHZlcnNpb246ICcxLjEnLFxuICAgICAgICAgICAgd2lkdGg6ICcxNicsXG4gICAgICAgICAgICBoZWlnaHQ6ICcxNicsXG4gICAgICAgICAgICBhcmlhSGlkZGVuOiAndHJ1ZScsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0eXBlOiAnZWxlbWVudCcsXG4gICAgICAgICAgICAgIHRhZ05hbWU6ICdwYXRoJyxcbiAgICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgIGZpbGxSdWxlOiAnZXZlbm9kZCcsXG4gICAgICAgICAgICAgICAgZDogJ003Ljc3NSAzLjI3NWEuNzUuNzUgMCAwMDEuMDYgMS4wNmwxLjI1LTEuMjVhMiAyIDAgMTEyLjgzIDIuODNsLTIuNSAyLjVhMiAyIDAgMDEtMi44MyAwIC43NS43NSAwIDAwLTEuMDYgMS4wNiAzLjUgMy41IDAgMDA0Ljk1IDBsMi41LTIuNWEzLjUgMy41IDAgMDAtNC45NS00Ljk1bC0xLjI1IDEuMjV6bS00LjY5IDkuNjRhMiAyIDAgMDEwLTIuODNsMi41LTIuNWEyIDIgMCAwMTIuODMgMCAuNzUuNzUgMCAwMDEuMDYtMS4wNiAzLjUgMy41IDAgMDAtNC45NSAwbC0yLjUgMi41YTMuNSAzLjUgMCAwMDQuOTUgNC45NWwxLjI1LTEuMjVhLjc1Ljc1IDAgMDAtMS4wNi0xLjA2bC0xLjI1IDEuMjVhMiAyIDAgMDEtMi44MyAweicsXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICAgIF07XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB0eXBlIE1hcmtkb3duUHJldmlld1Byb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHNvdXJjZT86IHN0cmluZztcbiAgc3R5bGU/OiBSZWFjdC5DU1NQcm9wZXJ0aWVzO1xuICB3YXJwcGVyRWxlbWVudD86IFJlYWN0LkRldGFpbGVkSFRNTFByb3BzPFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PiwgSFRNTERpdkVsZW1lbnQ+O1xuICBvblNjcm9sbD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxEaXZFbGVtZW50PikgPT4gdm9pZDtcbiAgb25Nb3VzZU92ZXI/OiAoZTogUmVhY3QuTW91c2VFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHZvaWQ7XG59ICYgT21pdDxSZWFjdE1hcmtkb3duLlJlYWN0TWFya2Rvd25PcHRpb25zLCAnY2hpbGRyZW4nPjtcblxuZXhwb3J0IHR5cGUgTWFya2Rvd25QcmV2aWV3UmVmID0ge1xuICBtZHA6IFJlYWN0LlJlZk9iamVjdDxIVE1MRGl2RWxlbWVudD47XG59ICYgTWFya2Rvd25QcmV2aWV3UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0LmZvcndhcmRSZWY8TWFya2Rvd25QcmV2aWV3UmVmLCBNYXJrZG93blByZXZpZXdQcm9wcz4oKHByb3BzLCByZWYpID0+IHtcbiAgY29uc3QgeyBjbGFzc05hbWUsIHNvdXJjZSwgc3R5bGUsIG9uU2Nyb2xsLCBvbk1vdXNlT3Zlciwgd2FycHBlckVsZW1lbnQgPSB7fSwgLi4ub3RoZXIgIH0gPSBwcm9wcyB8fCB7fTtcbiAgY29uc3QgbWRwID0gUmVhY3QuY3JlYXRlUmVmPEhUTUxEaXZFbGVtZW50PigpO1xuICB1c2VJbXBlcmF0aXZlSGFuZGxlKHJlZiwgKCkgPT4gKHsgLi4ucHJvcHMsIG1kcCB9KSwgW21kcCwgcHJvcHNdKTtcbiAgY29uc3QgY2xzID0gYHdtZGUtbWFya2Rvd24gd21kZS1tYXJrZG93bi1jb2xvciAke2NsYXNzTmFtZSB8fCAnJ31gO1xuICByZXR1cm4gKFxuICAgIDxkaXYgcmVmPXttZHB9IG9uU2Nyb2xsPXtvblNjcm9sbH0gb25Nb3VzZU92ZXI9e29uTW91c2VPdmVyfSB7Li4ud2FycHBlckVsZW1lbnR9IGNsYXNzTmFtZT17Y2xzfSBzdHlsZT17c3R5bGV9PlxuICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgey4uLm90aGVyfVxuICAgICAgICByZWh5cGVQbHVnaW5zPXtbW3JlaHlwZVByaXNtLCB7IGlnbm9yZU1pc3Npbmc6IHRydWUgfV0sIFtyZWh5cGVSZXdyaXRlLCByZWh5cGVSZXdyaXRlSGFuZGxlXSwgcmVoeXBlUmF3LCAuLi4ob3RoZXIucmVoeXBlUGx1Z2lucyB8fCBbXSldfVxuICAgICAgICByZW1hcmtQbHVnaW5zPXtbIHNsdWcsIGhlYWRpbmdzLCAuLi4ob3RoZXIucmVtYXJrUGx1Z2lucyB8fCBbXSksIGdmbSBdfVxuICAgICAgICBjaGlsZHJlbj17c291cmNlIHx8ICcnfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuIl19