import React, { useEffect, useMemo, useRef } from 'react';
import "./index.css";

var DragBar = function DragBar(props) {
  var _ref = props || {},
      prefixCls = _ref.prefixCls,
      onChange = _ref.onChange;

  var dragRef = useRef();

  function handleMouseMove(event) {
    if (dragRef.current) {
      var newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;

      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {
        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));
      }
    }
  }

  function handleMouseUp() {
    dragRef.current = undefined;
  }

  function handleMouseDown(event) {
    dragRef.current = {
      height: props.height,
      dragY: event.clientY
    };
  }

  useEffect(function () {
    if (document) {
      document.addEventListener('mousemove', handleMouseMove);
      document.addEventListener('mouseup', handleMouseUp);
    }

    return function () {
      if (document) {
        document.removeEventListener('mousemove', handleMouseMove);
        document.removeEventListener('mouseup', handleMouseUp);
      }
    };
  }, []);
  var svg = useMemo(function () {
    return /*#__PURE__*/React.createElement("svg", {
      viewBox: "0 0 512 512",
      height: "100%"
    }, /*#__PURE__*/React.createElement("path", {
      fill: "currentColor",
      d: "M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z"
    }));
  }, []);
  return /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-bar"),
    onMouseDown: handleMouseDown
  }, svg);
};

export default DragBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0RyYWdCYXIvaW5kZXgudHN4Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZiIsIkRyYWdCYXIiLCJwcm9wcyIsInByZWZpeENscyIsIm9uQ2hhbmdlIiwiZHJhZ1JlZiIsImhhbmRsZU1vdXNlTW92ZSIsImV2ZW50IiwiY3VycmVudCIsIm5ld0hlaWdodCIsImhlaWdodCIsImNsaWVudFkiLCJkcmFnWSIsIm1pbkhlaWdodCIsIm1heEhlaWdodCIsImhhbmRsZU1vdXNlVXAiLCJ1bmRlZmluZWQiLCJoYW5kbGVNb3VzZURvd24iLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic3ZnIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxLQUFQLElBQWdCQyxTQUFoQixFQUEyQkMsT0FBM0IsRUFBb0NDLE1BQXBDLFFBQWtELE9BQWxEO0FBRUE7O0FBU0EsSUFBTUMsT0FBZ0MsR0FBRyxTQUFuQ0EsT0FBbUMsQ0FBQ0MsS0FBRCxFQUFXO0FBQ2xELGFBQWdDQSxLQUFLLElBQUksRUFBekM7QUFBQSxNQUFRQyxTQUFSLFFBQVFBLFNBQVI7QUFBQSxNQUFtQkMsUUFBbkIsUUFBbUJBLFFBQW5COztBQUNBLE1BQU1DLE9BQU8sR0FBR0wsTUFBTSxFQUF0Qjs7QUFDQSxXQUFTTSxlQUFULENBQXlCQyxLQUF6QixFQUE0QztBQUMxQyxRQUFJRixPQUFPLENBQUNHLE9BQVosRUFBcUI7QUFDbkIsVUFBTUMsU0FBUyxHQUFHSixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JFLE1BQWhCLEdBQXlCSCxLQUFLLENBQUNJLE9BQS9CLEdBQXlDTixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JJLEtBQTNFOztBQUNBLFVBQUlILFNBQVMsSUFBSVAsS0FBSyxDQUFDVyxTQUFuQixJQUFnQ0osU0FBUyxJQUFJUCxLQUFLLENBQUNZLFNBQXZELEVBQWtFO0FBQ2hFVixRQUFBQSxRQUFRLElBQUlBLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDRyxPQUFSLENBQWdCRSxNQUFoQixJQUEwQkgsS0FBSyxDQUFDSSxPQUFOLEdBQWdCTixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JJLEtBQTFELENBQUQsQ0FBcEI7QUFDRDtBQUNGO0FBQ0Y7O0FBQ0QsV0FBU0csYUFBVCxHQUF5QjtBQUN2QlYsSUFBQUEsT0FBTyxDQUFDRyxPQUFSLEdBQWtCUSxTQUFsQjtBQUNEOztBQUNELFdBQVNDLGVBQVQsQ0FBeUJWLEtBQXpCLEVBQThFO0FBQzVFRixJQUFBQSxPQUFPLENBQUNHLE9BQVIsR0FBa0I7QUFDaEJFLE1BQUFBLE1BQU0sRUFBRVIsS0FBSyxDQUFDUSxNQURFO0FBRWhCRSxNQUFBQSxLQUFLLEVBQUVMLEtBQUssQ0FBQ0k7QUFGRyxLQUFsQjtBQUlEOztBQUVEYixFQUFBQSxTQUFTLENBQUMsWUFBTTtBQUNkLFFBQUlvQixRQUFKLEVBQWM7QUFDWkEsTUFBQUEsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixXQUExQixFQUF1Q2IsZUFBdkM7QUFDQVksTUFBQUEsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixTQUExQixFQUFxQ0osYUFBckM7QUFDRDs7QUFDRCxXQUFPLFlBQU07QUFDWCxVQUFJRyxRQUFKLEVBQWM7QUFDWkEsUUFBQUEsUUFBUSxDQUFDRSxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ2QsZUFBMUM7QUFDQVksUUFBQUEsUUFBUSxDQUFDRSxtQkFBVCxDQUE2QixTQUE3QixFQUF3Q0wsYUFBeEM7QUFDRDtBQUNGLEtBTEQ7QUFNRCxHQVhRLEVBV04sRUFYTSxDQUFUO0FBWUEsTUFBTU0sR0FBRyxHQUFHdEIsT0FBTyxDQUNqQjtBQUFBLHdCQUNFO0FBQUssTUFBQSxPQUFPLEVBQUMsYUFBYjtBQUEyQixNQUFBLE1BQU0sRUFBQztBQUFsQyxvQkFDRTtBQUNFLE1BQUEsSUFBSSxFQUFDLGNBRFA7QUFFRSxNQUFBLENBQUMsRUFBQztBQUZKLE1BREYsQ0FERjtBQUFBLEdBRGlCLEVBU2pCLEVBVGlCLENBQW5CO0FBV0Esc0JBQ0U7QUFBSyxJQUFBLFNBQVMsWUFBS0ksU0FBTCxTQUFkO0FBQW9DLElBQUEsV0FBVyxFQUFFYztBQUFqRCxLQUNHSSxHQURILENBREY7QUFLRCxDQWpERDs7QUFtREEsZUFBZXBCLE9BQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VNZW1vLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBJUHJvcHMgfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgJy4vaW5kZXgubGVzcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSURyYWdCYXJQcm9wcyBleHRlbmRzIElQcm9wcyB7XG4gIGhlaWdodDogbnVtYmVyO1xuICBtYXhIZWlnaHQ6IG51bWJlcjtcbiAgbWluSGVpZ2h0OiBudW1iZXI7XG4gIG9uQ2hhbmdlOiAodmFsdWU6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuY29uc3QgRHJhZ0JhcjogUmVhY3QuRkM8SURyYWdCYXJQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyBwcmVmaXhDbHMsIG9uQ2hhbmdlIH0gPSBwcm9wcyB8fCB7fTtcbiAgY29uc3QgZHJhZ1JlZiA9IHVzZVJlZjx7IGhlaWdodDogbnVtYmVyOyBkcmFnWTogbnVtYmVyIH0+KCk7XG4gIGZ1bmN0aW9uIGhhbmRsZU1vdXNlTW92ZShldmVudDogTW91c2VFdmVudCkge1xuICAgIGlmIChkcmFnUmVmLmN1cnJlbnQpIHtcbiAgICAgIGNvbnN0IG5ld0hlaWdodCA9IGRyYWdSZWYuY3VycmVudC5oZWlnaHQgKyBldmVudC5jbGllbnRZIC0gZHJhZ1JlZi5jdXJyZW50LmRyYWdZO1xuICAgICAgaWYgKG5ld0hlaWdodCA+PSBwcm9wcy5taW5IZWlnaHQgJiYgbmV3SGVpZ2h0IDw9IHByb3BzLm1heEhlaWdodCkge1xuICAgICAgICBvbkNoYW5nZSAmJiBvbkNoYW5nZShkcmFnUmVmLmN1cnJlbnQuaGVpZ2h0ICsgKGV2ZW50LmNsaWVudFkgLSBkcmFnUmVmLmN1cnJlbnQuZHJhZ1kpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gaGFuZGxlTW91c2VVcCgpIHtcbiAgICBkcmFnUmVmLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gIH1cbiAgZnVuY3Rpb24gaGFuZGxlTW91c2VEb3duKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxEaXZFbGVtZW50LCBNb3VzZUV2ZW50Pikge1xuICAgIGRyYWdSZWYuY3VycmVudCA9IHtcbiAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgZHJhZ1k6IGV2ZW50LmNsaWVudFksXG4gICAgfTtcbiAgfVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGRvY3VtZW50KSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUpO1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZU1vdXNlVXApO1xuICAgIH1cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaWYgKGRvY3VtZW50KSB7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGhhbmRsZU1vdXNlTW92ZSk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbXSk7XG4gIGNvbnN0IHN2ZyA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKFxuICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiBoZWlnaHQ9XCIxMDAlXCI+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgZmlsbD1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgZD1cIk0zMDQgMjU2YzAgMjYuNS0yMS41IDQ4LTQ4IDQ4cy00OC0yMS41LTQ4LTQ4IDIxLjUtNDggNDgtNDggNDggMjEuNSA0OCA0OHptMTIwLTQ4Yy0yNi41IDAtNDggMjEuNS00OCA0OHMyMS41IDQ4IDQ4IDQ4IDQ4LTIxLjUgNDgtNDgtMjEuNS00OC00OC00OHptLTMzNiAwYy0yNi41IDAtNDggMjEuNS00OCA0OHMyMS41IDQ4IDQ4IDQ4IDQ4LTIxLjUgNDgtNDgtMjEuNS00OC00OC00OHpcIlxuICAgICAgICAvPlxuICAgICAgPC9zdmc+XG4gICAgKSxcbiAgICBbXSxcbiAgKTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YCR7cHJlZml4Q2xzfS1iYXJgfSBvbk1vdXNlRG93bj17aGFuZGxlTW91c2VEb3dufT5cbiAgICAgIHtzdmd9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBEcmFnQmFyO1xuIl19