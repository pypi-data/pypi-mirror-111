import _extends from "@babel/runtime/helpers/extends";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React from 'react';
export var group = function group(arr, options) {
  var data = _objectSpread(_objectSpread({
    children: arr,
    icon: /*#__PURE__*/React.createElement("svg", {
      width: "12",
      height: "12",
      viewBox: "0 0 520 520"
    }, /*#__PURE__*/React.createElement("path", {
      fill: "currentColor",
      d: "M15.7083333,468 C7.03242448,468 0,462.030833 0,454.666667 L0,421.333333 C0,413.969167 7.03242448,408 15.7083333,408 L361.291667,408 C369.967576,408 377,413.969167 377,421.333333 L377,454.666667 C377,462.030833 369.967576,468 361.291667,468 L15.7083333,468 Z M21.6666667,366 C9.69989583,366 0,359.831861 0,352.222222 L0,317.777778 C0,310.168139 9.69989583,304 21.6666667,304 L498.333333,304 C510.300104,304 520,310.168139 520,317.777778 L520,352.222222 C520,359.831861 510.300104,366 498.333333,366 L21.6666667,366 Z M136.835938,64 L136.835937,126 L107.25,126 L107.25,251 L40.75,251 L40.75,126 L-5.68434189e-14,126 L-5.68434189e-14,64 L136.835938,64 Z M212,64 L212,251 L161.648438,251 L161.648438,64 L212,64 Z M378,64 L378,126 L343.25,126 L343.25,251 L281.75,251 L281.75,126 L238,126 L238,64 L378,64 Z M449.047619,189.550781 L520,189.550781 L520,251 L405,251 L405,64 L449.047619,64 L449.047619,189.550781 Z"
    })),
    execute: function execute() {}
  }, options), {}, {
    keyCommand: 'group'
  });

  if (Array.isArray(data.children)) {
    data.children = data.children.map(function (_ref) {
      var item = _extends({}, _ref);

      item.parent = data;
      return _objectSpread({}, item);
    });
  }

  return data;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9ncm91cC50c3giXSwibmFtZXMiOlsiUmVhY3QiLCJncm91cCIsImFyciIsIm9wdGlvbnMiLCJkYXRhIiwiY2hpbGRyZW4iLCJpY29uIiwiZXhlY3V0ZSIsImtleUNvbW1hbmQiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJpdGVtIiwicGFyZW50Il0sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFPQSxPQUFPLElBQU1DLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUNDLEdBQUQsRUFBeUNDLE9BQXpDLEVBQXNGO0FBQ3pHLE1BQUlDLElBQUk7QUFDTkMsSUFBQUEsUUFBUSxFQUFFSCxHQURKO0FBRU5JLElBQUFBLElBQUksZUFDRjtBQUFLLE1BQUEsS0FBSyxFQUFDLElBQVg7QUFBZ0IsTUFBQSxNQUFNLEVBQUMsSUFBdkI7QUFBNEIsTUFBQSxPQUFPLEVBQUM7QUFBcEMsb0JBQ0U7QUFDRSxNQUFBLElBQUksRUFBQyxjQURQO0FBRUUsTUFBQSxDQUFDLEVBQUM7QUFGSixNQURGLENBSEk7QUFVTkMsSUFBQUEsT0FBTyxFQUFFLG1CQUFNLENBQUU7QUFWWCxLQVdISixPQVhHO0FBWU5LLElBQUFBLFVBQVUsRUFBRTtBQVpOLElBQVI7O0FBY0EsTUFBSUMsS0FBSyxDQUFDQyxPQUFOLENBQWNOLElBQUksQ0FBQ0MsUUFBbkIsQ0FBSixFQUFrQztBQUNoQ0QsSUFBQUEsSUFBSSxDQUFDQyxRQUFMLEdBQWdCRCxJQUFJLENBQUNDLFFBQUwsQ0FBY00sR0FBZCxDQUFrQixnQkFBMkI7QUFBQSxVQUFyQkMsSUFBcUI7O0FBQzNEQSxNQUFBQSxJQUFJLENBQUNDLE1BQUwsR0FBY1QsSUFBZDtBQUNBLCtCQUFZUSxJQUFaO0FBQ0QsS0FIZSxDQUFoQjtBQUlEOztBQUNELFNBQU9SLElBQVA7QUFDRCxDQXRCTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBJQ29tbWFuZCwgSUNvbW1hbmRDaGlsZENvbW1hbmRzLCBJQ29tbWFuZENoaWxkSGFuZGxlIH0gZnJvbSAnLi8nO1xuXG5leHBvcnQgdHlwZSBHcm91cE9wdGlvbnMgPSBPbWl0PElDb21tYW5kPHN0cmluZz4sICdjaGlsZHJlbic+ICYge1xuICBjaGlsZHJlbj86IElDb21tYW5kQ2hpbGRIYW5kbGVbJ2NoaWxkcmVuJ107XG59O1xuXG5leHBvcnQgY29uc3QgZ3JvdXAgPSAoYXJyOiBJQ29tbWFuZENoaWxkQ29tbWFuZHNbJ2NoaWxkcmVuJ10sIG9wdGlvbnM/OiBHcm91cE9wdGlvbnMpOiBJQ29tbWFuZDxzdHJpbmc+ID0+IHtcbiAgbGV0IGRhdGEgPSB7XG4gICAgY2hpbGRyZW46IGFyciBhcyBhbnksXG4gICAgaWNvbjogKFxuICAgICAgPHN2ZyB3aWR0aD1cIjEyXCIgaGVpZ2h0PVwiMTJcIiB2aWV3Qm94PVwiMCAwIDUyMCA1MjBcIj5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBmaWxsPVwiY3VycmVudENvbG9yXCJcbiAgICAgICAgICBkPVwiTTE1LjcwODMzMzMsNDY4IEM3LjAzMjQyNDQ4LDQ2OCAwLDQ2Mi4wMzA4MzMgMCw0NTQuNjY2NjY3IEwwLDQyMS4zMzMzMzMgQzAsNDEzLjk2OTE2NyA3LjAzMjQyNDQ4LDQwOCAxNS43MDgzMzMzLDQwOCBMMzYxLjI5MTY2Nyw0MDggQzM2OS45Njc1NzYsNDA4IDM3Nyw0MTMuOTY5MTY3IDM3Nyw0MjEuMzMzMzMzIEwzNzcsNDU0LjY2NjY2NyBDMzc3LDQ2Mi4wMzA4MzMgMzY5Ljk2NzU3Niw0NjggMzYxLjI5MTY2Nyw0NjggTDE1LjcwODMzMzMsNDY4IFogTTIxLjY2NjY2NjcsMzY2IEM5LjY5OTg5NTgzLDM2NiAwLDM1OS44MzE4NjEgMCwzNTIuMjIyMjIyIEwwLDMxNy43Nzc3NzggQzAsMzEwLjE2ODEzOSA5LjY5OTg5NTgzLDMwNCAyMS42NjY2NjY3LDMwNCBMNDk4LjMzMzMzMywzMDQgQzUxMC4zMDAxMDQsMzA0IDUyMCwzMTAuMTY4MTM5IDUyMCwzMTcuNzc3Nzc4IEw1MjAsMzUyLjIyMjIyMiBDNTIwLDM1OS44MzE4NjEgNTEwLjMwMDEwNCwzNjYgNDk4LjMzMzMzMywzNjYgTDIxLjY2NjY2NjcsMzY2IFogTTEzNi44MzU5MzgsNjQgTDEzNi44MzU5MzcsMTI2IEwxMDcuMjUsMTI2IEwxMDcuMjUsMjUxIEw0MC43NSwyNTEgTDQwLjc1LDEyNiBMLTUuNjg0MzQxODllLTE0LDEyNiBMLTUuNjg0MzQxODllLTE0LDY0IEwxMzYuODM1OTM4LDY0IFogTTIxMiw2NCBMMjEyLDI1MSBMMTYxLjY0ODQzOCwyNTEgTDE2MS42NDg0MzgsNjQgTDIxMiw2NCBaIE0zNzgsNjQgTDM3OCwxMjYgTDM0My4yNSwxMjYgTDM0My4yNSwyNTEgTDI4MS43NSwyNTEgTDI4MS43NSwxMjYgTDIzOCwxMjYgTDIzOCw2NCBMMzc4LDY0IFogTTQ0OS4wNDc2MTksMTg5LjU1MDc4MSBMNTIwLDE4OS41NTA3ODEgTDUyMCwyNTEgTDQwNSwyNTEgTDQwNSw2NCBMNDQ5LjA0NzYxOSw2NCBMNDQ5LjA0NzYxOSwxODkuNTUwNzgxIFpcIlxuICAgICAgICAvPlxuICAgICAgPC9zdmc+XG4gICAgKSxcbiAgICBleGVjdXRlOiAoKSA9PiB7fSxcbiAgICAuLi5vcHRpb25zLFxuICAgIGtleUNvbW1hbmQ6ICdncm91cCcsXG4gIH07XG4gIGlmIChBcnJheS5pc0FycmF5KGRhdGEuY2hpbGRyZW4pKSB7XG4gICAgZGF0YS5jaGlsZHJlbiA9IGRhdGEuY2hpbGRyZW4ubWFwKCh7IC4uLml0ZW0gfTogSUNvbW1hbmQpID0+IHtcbiAgICAgIGl0ZW0ucGFyZW50ID0gZGF0YTtcbiAgICAgIHJldHVybiB7IC4uLml0ZW0gfTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn07XG4iXX0=