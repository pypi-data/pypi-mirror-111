"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var DragBar = function DragBar(props) {
  var _ref = props || {},
      prefixCls = _ref.prefixCls,
      onChange = _ref.onChange;

  var dragRef = (0, _react.useRef)();

  function handleMouseMove(event) {
    if (dragRef.current) {
      var newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;

      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {
        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));
      }
    }
  }

  function handleMouseUp() {
    dragRef.current = undefined;
  }

  function handleMouseDown(event) {
    dragRef.current = {
      height: props.height,
      dragY: event.clientY
    };
  }

  (0, _react.useEffect)(function () {
    if (document) {
      document.addEventListener('mousemove', handleMouseMove);
      document.addEventListener('mouseup', handleMouseUp);
    }

    return function () {
      if (document) {
        document.removeEventListener('mousemove', handleMouseMove);
        document.removeEventListener('mouseup', handleMouseUp);
      }
    };
  }, []);
  var svg = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react.default.createElement("svg", {
      viewBox: "0 0 512 512",
      height: "100%"
    }, /*#__PURE__*/_react.default.createElement("path", {
      fill: "currentColor",
      d: "M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z"
    }));
  }, []);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-bar"),
    onMouseDown: handleMouseDown
  }, svg);
};

var _default = DragBar;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0RyYWdCYXIvaW5kZXgudHN4Il0sIm5hbWVzIjpbIkRyYWdCYXIiLCJwcm9wcyIsInByZWZpeENscyIsIm9uQ2hhbmdlIiwiZHJhZ1JlZiIsImhhbmRsZU1vdXNlTW92ZSIsImV2ZW50IiwiY3VycmVudCIsIm5ld0hlaWdodCIsImhlaWdodCIsImNsaWVudFkiLCJkcmFnWSIsIm1pbkhlaWdodCIsIm1heEhlaWdodCIsImhhbmRsZU1vdXNlVXAiLCJ1bmRlZmluZWQiLCJoYW5kbGVNb3VzZURvd24iLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic3ZnIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFXQSxJQUFNQSxPQUFnQyxHQUFHLFNBQW5DQSxPQUFtQyxDQUFDQyxLQUFELEVBQVc7QUFDbEQsYUFBZ0NBLEtBQUssSUFBSSxFQUF6QztBQUFBLE1BQVFDLFNBQVIsUUFBUUEsU0FBUjtBQUFBLE1BQW1CQyxRQUFuQixRQUFtQkEsUUFBbkI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHLG9CQUFoQjs7QUFDQSxXQUFTQyxlQUFULENBQXlCQyxLQUF6QixFQUE0QztBQUMxQyxRQUFJRixPQUFPLENBQUNHLE9BQVosRUFBcUI7QUFDbkIsVUFBTUMsU0FBUyxHQUFHSixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JFLE1BQWhCLEdBQXlCSCxLQUFLLENBQUNJLE9BQS9CLEdBQXlDTixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JJLEtBQTNFOztBQUNBLFVBQUlILFNBQVMsSUFBSVAsS0FBSyxDQUFDVyxTQUFuQixJQUFnQ0osU0FBUyxJQUFJUCxLQUFLLENBQUNZLFNBQXZELEVBQWtFO0FBQ2hFVixRQUFBQSxRQUFRLElBQUlBLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDRyxPQUFSLENBQWdCRSxNQUFoQixJQUEwQkgsS0FBSyxDQUFDSSxPQUFOLEdBQWdCTixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JJLEtBQTFELENBQUQsQ0FBcEI7QUFDRDtBQUNGO0FBQ0Y7O0FBQ0QsV0FBU0csYUFBVCxHQUF5QjtBQUN2QlYsSUFBQUEsT0FBTyxDQUFDRyxPQUFSLEdBQWtCUSxTQUFsQjtBQUNEOztBQUNELFdBQVNDLGVBQVQsQ0FBeUJWLEtBQXpCLEVBQThFO0FBQzVFRixJQUFBQSxPQUFPLENBQUNHLE9BQVIsR0FBa0I7QUFDaEJFLE1BQUFBLE1BQU0sRUFBRVIsS0FBSyxDQUFDUSxNQURFO0FBRWhCRSxNQUFBQSxLQUFLLEVBQUVMLEtBQUssQ0FBQ0k7QUFGRyxLQUFsQjtBQUlEOztBQUVELHdCQUFVLFlBQU07QUFDZCxRQUFJTyxRQUFKLEVBQWM7QUFDWkEsTUFBQUEsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixXQUExQixFQUF1Q2IsZUFBdkM7QUFDQVksTUFBQUEsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixTQUExQixFQUFxQ0osYUFBckM7QUFDRDs7QUFDRCxXQUFPLFlBQU07QUFDWCxVQUFJRyxRQUFKLEVBQWM7QUFDWkEsUUFBQUEsUUFBUSxDQUFDRSxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ2QsZUFBMUM7QUFDQVksUUFBQUEsUUFBUSxDQUFDRSxtQkFBVCxDQUE2QixTQUE3QixFQUF3Q0wsYUFBeEM7QUFDRDtBQUNGLEtBTEQ7QUFNRCxHQVhELEVBV0csRUFYSDtBQVlBLE1BQU1NLEdBQUcsR0FBRyxvQkFDVjtBQUFBLHdCQUNFO0FBQUssTUFBQSxPQUFPLEVBQUMsYUFBYjtBQUEyQixNQUFBLE1BQU0sRUFBQztBQUFsQyxvQkFDRTtBQUNFLE1BQUEsSUFBSSxFQUFDLGNBRFA7QUFFRSxNQUFBLENBQUMsRUFBQztBQUZKLE1BREYsQ0FERjtBQUFBLEdBRFUsRUFTVixFQVRVLENBQVo7QUFXQSxzQkFDRTtBQUFLLElBQUEsU0FBUyxZQUFLbEIsU0FBTCxTQUFkO0FBQW9DLElBQUEsV0FBVyxFQUFFYztBQUFqRCxLQUNHSSxHQURILENBREY7QUFLRCxDQWpERDs7ZUFtRGVwQixPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSVByb3BzIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xuaW1wb3J0ICcuL2luZGV4Lmxlc3MnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElEcmFnQmFyUHJvcHMgZXh0ZW5kcyBJUHJvcHMge1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgbWF4SGVpZ2h0OiBudW1iZXI7XG4gIG1pbkhlaWdodDogbnVtYmVyO1xuICBvbkNoYW5nZTogKHZhbHVlOiBudW1iZXIpID0+IHZvaWQ7XG59XG5cbmNvbnN0IERyYWdCYXI6IFJlYWN0LkZDPElEcmFnQmFyUHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgcHJlZml4Q2xzLCBvbkNoYW5nZSB9ID0gcHJvcHMgfHwge307XG4gIGNvbnN0IGRyYWdSZWYgPSB1c2VSZWY8eyBoZWlnaHQ6IG51bWJlcjsgZHJhZ1k6IG51bWJlciB9PigpO1xuICBmdW5jdGlvbiBoYW5kbGVNb3VzZU1vdmUoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICBpZiAoZHJhZ1JlZi5jdXJyZW50KSB7XG4gICAgICBjb25zdCBuZXdIZWlnaHQgPSBkcmFnUmVmLmN1cnJlbnQuaGVpZ2h0ICsgZXZlbnQuY2xpZW50WSAtIGRyYWdSZWYuY3VycmVudC5kcmFnWTtcbiAgICAgIGlmIChuZXdIZWlnaHQgPj0gcHJvcHMubWluSGVpZ2h0ICYmIG5ld0hlaWdodCA8PSBwcm9wcy5tYXhIZWlnaHQpIHtcbiAgICAgICAgb25DaGFuZ2UgJiYgb25DaGFuZ2UoZHJhZ1JlZi5jdXJyZW50LmhlaWdodCArIChldmVudC5jbGllbnRZIC0gZHJhZ1JlZi5jdXJyZW50LmRyYWdZKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGhhbmRsZU1vdXNlVXAoKSB7XG4gICAgZHJhZ1JlZi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICB9XG4gIGZ1bmN0aW9uIGhhbmRsZU1vdXNlRG93bihldmVudDogUmVhY3QuTW91c2VFdmVudDxIVE1MRGl2RWxlbWVudCwgTW91c2VFdmVudD4pIHtcbiAgICBkcmFnUmVmLmN1cnJlbnQgPSB7XG4gICAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCxcbiAgICAgIGRyYWdZOiBldmVudC5jbGllbnRZLFxuICAgIH07XG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChkb2N1bWVudCkge1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwKTtcbiAgICB9XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmIChkb2N1bWVudCkge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlTW91c2VVcCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW10pO1xuICBjb25zdCBzdmcgPSB1c2VNZW1vKFxuICAgICgpID0+IChcbiAgICAgIDxzdmcgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgaGVpZ2h0PVwiMTAwJVwiPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgIGQ9XCJNMzA0IDI1NmMwIDI2LjUtMjEuNSA0OC00OCA0OHMtNDgtMjEuNS00OC00OCAyMS41LTQ4IDQ4LTQ4IDQ4IDIxLjUgNDggNDh6bTEyMC00OGMtMjYuNSAwLTQ4IDIxLjUtNDggNDhzMjEuNSA0OCA0OCA0OCA0OC0yMS41IDQ4LTQ4LTIxLjUtNDgtNDgtNDh6bS0zMzYgMGMtMjYuNSAwLTQ4IDIxLjUtNDggNDhzMjEuNSA0OCA0OCA0OCA0OC0yMS41IDQ4LTQ4LTIxLjUtNDgtNDgtNDh6XCJcbiAgICAgICAgLz5cbiAgICAgIDwvc3ZnPlxuICAgICksXG4gICAgW10sXG4gICk7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2Ake3ByZWZpeENsc30tYmFyYH0gb25Nb3VzZURvd249e2hhbmRsZU1vdXNlRG93bn0+XG4gICAgICB7c3ZnfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRHJhZ0JhcjtcbiJdfQ==