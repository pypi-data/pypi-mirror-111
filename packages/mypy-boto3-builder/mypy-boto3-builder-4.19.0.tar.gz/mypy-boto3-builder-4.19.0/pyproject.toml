[tool.black]
line-length = 100
include = '(mypy_boto3_builder|tests)/.*\.pyi?$'
target-version = [
    'py36',
    'py37',
    'py38',
]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = [
    "mypy_boto3_builder",
    "tests",
]
src_paths = []

[tool.poetry]
name = "mypy-boto3-builder"
version = "4.19.0"
description = "Builder for boto3-stubs"
authors = ["Vlad Emelianov <vlad.emelianov.nz@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
pip = "*"
black = "^21.5b2"
boto3 = "*"
isort = "^5.6.4"
jinja2= "^3.0.1"
pyparsing = "*"
mdformat = "*"

[tool.poetry.dev-dependencies]
codecov = "2.1.11"
handsdown = "0.3.9"
mypy = "0.910"
flake8 = "3.9.2"
flake8-docstrings = "1.6.0"
pytest-cov = "2.12.1"
pytest = "6.2.4"
vulture = "2.1"
twine = "3.4.1"
types-requests = "*"
types-pkg-resources = "*"
types-six = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
]
ignore_errors = true
omit = [
    "tests/*",
]

[tool.pyright]
include = [
    "mypy_boto3_builder",
]
exclude = [
    "**/__pycache__",
    "tests",
    "typestubs",
]
reportMissingImports = true
reportMissingTypeStubs = false
reportMissingTypeArgument = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportUnknownParameterType = "error"
