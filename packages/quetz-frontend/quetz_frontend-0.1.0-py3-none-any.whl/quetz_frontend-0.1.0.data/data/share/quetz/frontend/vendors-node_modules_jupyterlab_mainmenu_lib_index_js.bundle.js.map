{"version":3,"sources":["webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/edit.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/file.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/help.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/index.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/kernel.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/labmenu.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/mainmenu.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/run.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/settings.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/tabs.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/tokens.js","webpack://@quetz-frontend/app/../../node_modules/@jupyterlab/mainmenu/lib/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,uBAAuB,oDAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;;;;ACzBA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,uBAAuB,oDAAc;AAC5C;AACA;AACA;AACA;AACA,2BAA2B,oDAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;;;;ACxBA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,uBAAuB,oDAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAC2B;AACD;AACH;AACA;AACA;AACE;AACH;AACK;AACJ;AACA;AACE;AACzB,iC;;;;;;;;;;;;;;;;ACjBA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,yBAAyB,oDAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAC6C;AACW;AACjB;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kEAAmB;AAC9C;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,oBAAoB;AAChF;AACA,QAAQ,8DAAe;AACvB,mBAAmB,kEAAkB;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACoD;AACP;AACH;AACR;AACA;AACA;AACI;AACN;AACU;AACR;AACA;AAClC;AACA;AACA;AACO,uBAAuB,oDAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2CAAQ,EAAE,WAAW;AACjD,4BAA4B,2CAAQ,EAAE,WAAW;AACjD,4BAA4B,2CAAQ,EAAE,WAAW;AACjD,8BAA8B,+CAAU,EAAE,WAAW;AACrD,2BAA2B,yCAAO,EAAE,WAAW;AAC/C,gCAAgC,mDAAY,EAAE,WAAW;AACzD,4BAA4B,2CAAQ,EAAE,WAAW;AACjD,4BAA4B,4CAAQ,EAAE,WAAW;AACjD,0CAA0C,UAAU;AACpD,0CAA0C,UAAU;AACpD,0CAA0C,UAAU;AACpD,yCAAyC,UAAU;AACnD,4CAA4C,UAAU;AACtD,0CAA0C,YAAY;AACtD,8CAA8C,YAAY;AAC1D,0CAA0C,aAAa;AACvD;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,QAAQ,sFAA+B;AACvC,YAAY,oEAAqB;AACjC;AACA;AACA;AACA,0BAA0B;AAC1B,sBAAsB,kEAAmB;AACzC;AACA;AACA,QAAQ,8DAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAuB;AAC7C;AACA,YAAY,gEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B,oC;;;;;;;;;;;;;;;;AClGA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,sBAAsB,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;;;;ACtBA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,2BAA2B,oDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;ACdA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,uBAAuB,oDAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;;;;;ACdA;AACA;AAC0C;AAC1C;AACA;AACA;AACA;AACO,sBAAsB,oDAAK;AAClC,kC;;;;;;;;;;;;;;;;ACRA;AACA;AAC2C;AAC3C;AACA;AACA;AACO,uBAAuB,oDAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC","file":"vendors-node_modules_jupyterlab_mainmenu_lib_index_js.bundle.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Edit menu for the application.\n */\nexport class EditMenu extends JupyterLabMenu {\n    /**\n     * Construct the edit menu.\n     */\n    constructor(options) {\n        super(options);\n        this.undoers = new Set();\n        this.clearers = new Set();\n        this.goToLiners = new Set();\n    }\n    /**\n     * Dispose of the resources held by the edit menu.\n     */\n    dispose() {\n        this.undoers.clear();\n        this.clearers.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=edit.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible FileMenu for the application.\n */\nexport class FileMenu extends JupyterLabMenu {\n    constructor(options) {\n        super(options);\n        this.quitEntry = false;\n        // Create the \"New\" submenu.\n        this.newMenu = new JupyterLabMenu(options, false);\n        this.closeAndCleaners = new Set();\n        this.consoleCreators = new Set();\n    }\n    /**\n     * Dispose of the resources held by the file menu.\n     */\n    dispose() {\n        this.newMenu.dispose();\n        this.consoleCreators.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=file.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Help menu for the application.\n */\nexport class HelpMenu extends JupyterLabMenu {\n    /**\n     * Construct the help menu.\n     */\n    constructor(options) {\n        super(options);\n        this.kernelUsers = new Set();\n    }\n}\n//# sourceMappingURL=help.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module mainmenu\n */\nexport * from './mainmenu';\nexport * from './labmenu';\nexport * from './edit';\nexport * from './file';\nexport * from './help';\nexport * from './kernel';\nexport * from './run';\nexport * from './settings';\nexport * from './view';\nexport * from './tabs';\nexport * from './tokens';\n//# sourceMappingURL=index.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Kernel menu for the application.\n */\nexport class KernelMenu extends JupyterLabMenu {\n    /**\n     * Construct the kernel menu.\n     */\n    constructor(options) {\n        super(options);\n        this.kernelUsers = new Set();\n    }\n    /**\n     * Dispose of the resources held by the kernel menu.\n     */\n    dispose() {\n        this.kernelUsers.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=kernel.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { Menu } from '@lumino/widgets';\n/**\n * An extensible menu for JupyterLab application menus.\n */\nexport class JupyterLabMenu {\n    /**\n     * Construct a new menu.\n     *\n     * @param options - Options for the phosphor menu.\n     *\n     * @param includeSeparators - whether to include separators between the\n     *   groups that are added to the menu.\n     */\n    constructor(options, includeSeparators = true) {\n        this._groups = [];\n        this._isDisposed = false;\n        this.menu = new Menu(options);\n        this._includeSeparators = includeSeparators;\n    }\n    /**\n     * Add a group of menu items specific to a particular\n     * plugin.\n     *\n     * @param items - the list of menu items to add.\n     *\n     * @param rank - the rank in the menu in which to insert the group.\n     */\n    addGroup(items, rank) {\n        const rankGroup = {\n            size: items.length,\n            rank: rank === undefined ? 100 : rank\n        };\n        // Insert the plugin group into the list of groups.\n        const groupIndex = ArrayExt.upperBound(this._groups, rankGroup, Private.itemCmp);\n        // Determine the index of the menu at which to insert the group.\n        let insertIndex = 0;\n        for (let i = 0; i < groupIndex; ++i) {\n            if (this._groups[i].size > 0) {\n                insertIndex += this._groups[i].size;\n                // Increase the insert index by two extra in order\n                // to include the leading and trailing separators.\n                insertIndex += this._includeSeparators ? 2 : 0;\n            }\n        }\n        // Keep an array of the menu items that have been created.\n        const added = [];\n        // Insert a separator before the group.\n        // Phosphor takes care of superfluous leading,\n        // trailing, and duplicate separators.\n        if (this._includeSeparators) {\n            added.push(this.menu.insertItem(insertIndex++, { type: 'separator' }));\n        }\n        // Insert the group.\n        for (const item of items) {\n            added.push(this.menu.insertItem(insertIndex++, item));\n        }\n        // Insert a separator after the group.\n        if (this._includeSeparators) {\n            added.push(this.menu.insertItem(insertIndex++, { type: 'separator' }));\n        }\n        ArrayExt.insert(this._groups, groupIndex, rankGroup);\n        return new DisposableDelegate(() => {\n            added.forEach(i => this.menu.removeItem(i));\n            this._groups.splice(groupIndex, 1);\n        });\n    }\n    /**\n     * Whether the menu has been disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources held by the menu.\n     */\n    dispose() {\n        this._groups.length = 0;\n        this._isDisposed = true;\n        this.menu.dispose();\n    }\n}\n/**\n * A namespace for private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A comparator function for menu rank items.\n     */\n    function itemCmp(first, second) {\n        return first.rank - second.rank;\n    }\n    Private.itemCmp = itemCmp;\n})(Private || (Private = {}));\n//# sourceMappingURL=labmenu.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { MenuSvg } from '@jupyterlab/ui-components';\nimport { ArrayExt } from '@lumino/algorithm';\nimport { MenuBar } from '@lumino/widgets';\nimport { FileMenu } from './file';\nimport { EditMenu } from './edit';\nimport { HelpMenu } from './help';\nimport { KernelMenu } from './kernel';\nimport { RunMenu } from './run';\nimport { SettingsMenu } from './settings';\nimport { ViewMenu } from './view';\nimport { TabsMenu } from './tabs';\n/**\n * The main menu class.  It is intended to be used as a singleton.\n */\nexport class MainMenu extends MenuBar {\n    /**\n     * Construct the main menu bar.\n     */\n    constructor(commands) {\n        super();\n        this._items = [];\n        this.editMenu = new EditMenu({ commands });\n        this.fileMenu = new FileMenu({ commands });\n        this.helpMenu = new HelpMenu({ commands });\n        this.kernelMenu = new KernelMenu({ commands });\n        this.runMenu = new RunMenu({ commands });\n        this.settingsMenu = new SettingsMenu({ commands });\n        this.viewMenu = new ViewMenu({ commands });\n        this.tabsMenu = new TabsMenu({ commands });\n        this.addMenu(this.fileMenu.menu, { rank: 1 });\n        this.addMenu(this.editMenu.menu, { rank: 2 });\n        this.addMenu(this.viewMenu.menu, { rank: 3 });\n        this.addMenu(this.runMenu.menu, { rank: 4 });\n        this.addMenu(this.kernelMenu.menu, { rank: 5 });\n        this.addMenu(this.tabsMenu.menu, { rank: 500 });\n        this.addMenu(this.settingsMenu.menu, { rank: 999 });\n        this.addMenu(this.helpMenu.menu, { rank: 1000 });\n    }\n    /**\n     * Add a new menu to the main menu bar.\n     */\n    addMenu(menu, options = {}) {\n        // override default renderer with svg-supporting renderer\n        MenuSvg.overrideDefaultRenderer(menu);\n        if (ArrayExt.firstIndexOf(this.menus, menu) > -1) {\n            return;\n        }\n        const rank = 'rank' in options ? options.rank : 100;\n        const rankItem = { menu, rank };\n        const index = ArrayExt.upperBound(this._items, rankItem, Private.itemCmp);\n        // Upon disposal, remove the menu and its rank reference.\n        menu.disposed.connect(this._onMenuDisposed, this);\n        ArrayExt.insert(this._items, index, rankItem);\n        /**\n         * Create a new menu.\n         */\n        this.insertMenu(index, menu);\n    }\n    /**\n     * Dispose of the resources held by the menu bar.\n     */\n    dispose() {\n        this.editMenu.dispose();\n        this.fileMenu.dispose();\n        this.helpMenu.dispose();\n        this.kernelMenu.dispose();\n        this.runMenu.dispose();\n        this.settingsMenu.dispose();\n        this.viewMenu.dispose();\n        this.tabsMenu.dispose();\n        super.dispose();\n    }\n    /**\n     * Handle the disposal of a menu.\n     */\n    _onMenuDisposed(menu) {\n        this.removeMenu(menu);\n        const index = ArrayExt.findFirstIndex(this._items, item => item.menu === menu);\n        if (index !== -1) {\n            ArrayExt.removeAt(this._items, index);\n        }\n    }\n}\n/**\n * A namespace for private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A comparator function for menu rank items.\n     */\n    function itemCmp(first, second) {\n        return first.rank - second.rank;\n    }\n    Private.itemCmp = itemCmp;\n})(Private || (Private = {}));\n//# sourceMappingURL=mainmenu.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Run menu for the application.\n */\nexport class RunMenu extends JupyterLabMenu {\n    /**\n     * Construct the run menu.\n     */\n    constructor(options) {\n        super(options);\n        this.codeRunners = new Set();\n    }\n    /**\n     * Dispose of the resources held by the run menu.\n     */\n    dispose() {\n        this.codeRunners.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=run.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Settings menu for the application.\n */\nexport class SettingsMenu extends JupyterLabMenu {\n    /**\n     * Construct the settings menu.\n     */\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=settings.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Tabs menu for the application.\n */\nexport class TabsMenu extends JupyterLabMenu {\n    /**\n     * Construct the tabs menu.\n     */\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=tabs.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/* tslint:disable */\n/**\n * The main menu token.\n */\nexport const IMainMenu = new Token('@jupyterlab/mainmenu:IMainMenu');\n//# sourceMappingURL=tokens.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible View menu for the application.\n */\nexport class ViewMenu extends JupyterLabMenu {\n    /**\n     * Construct the view menu.\n     */\n    constructor(options) {\n        super(options);\n        this.editorViewers = new Set();\n    }\n    /**\n     * Dispose of the resources held by the view menu.\n     */\n    dispose() {\n        this.editorViewers.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=view.js.map"],"sourceRoot":""}