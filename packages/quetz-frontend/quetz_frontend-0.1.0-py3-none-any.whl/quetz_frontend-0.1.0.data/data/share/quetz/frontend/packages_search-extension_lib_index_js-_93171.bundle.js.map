{"version":3,"sources":["webpack://@quetz-frontend/app/../../packages/search-extension/lib/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACU;AACL;AACT;AACkB;AACnB;AACf;AAC/B;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAO;AACtB;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,iEAAe,MAAM,EAAC;AACtB,yBAAyB,6DAAW;AACpC;AACA;AACA,kBAAkB,sEAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+EAA6B;AACtD,oBAAoB,8DAAW,8CAA8C,WAAW;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,qCAAqC,WAAW;AAChD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM,MAAM,gDAAmB,CAAC,2CAAc;AACtE,oBAAoB,gDAAmB,OAAO,4DAA4D,0BAA0B,IAAI;AACxI;AACA,oBAAoB,gDAAmB,OAAO,4DAA4D,0BAA0B,YAAY,gBAAgB,IAAI;AACpK,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,MAAM,oCAAoC,gDAAmB;AACrF,aAAa;AACb;AACA,gBAAgB,gDAAmB,SAAS,yCAAyC;AACrF,YAAY,gDAAmB,QAAQ,wBAAwB;AAC/D,YAAY,gDAAmB,SAAS,oBAAoB;AAC5D,gBAAgB,gDAAmB,CAAC,iEAAW,GAAG,yBAAyB;AAC3E,YAAY,gDAAmB,SAAS,4BAA4B;AACpE,gBAAgB,gDAAmB,CAAC,8DAAQ,GAAG,qGAAqG;AACpJ,2BAA2B,gDAAmB,CAAC,wDAAK,GAAG,qCAAqC;AAC5F,iBAAiB;AACjB;AACA;AACA,iC","file":"packages_search-extension_lib_index_js-_93171.bundle.js","sourcesContent":["import { IRouter, } from '@jupyterlab/application';\nimport { DOMUtils, ReactWidget } from '@jupyterlab/apputils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { FetchHoc, Breadcrumbs } from '@quetz-frontend/apputils';\nimport { Table } from '@quetz-frontend/table';\nimport * as React from 'react';\n/**\n * The command ids used by the main plugin.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.plugin = '@quetz-frontend/search-extension:search';\n    CommandIDs.open = '@quetz-frontend/search-extension:search/open';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * The main menu plugin.\n */\nconst plugin = {\n    id: CommandIDs.plugin,\n    autoStart: true,\n    requires: [IRouter],\n    activate: (app, router) => {\n        const { shell, commands } = app;\n        commands.addCommand(CommandIDs.open, {\n            execute: () => {\n                shell.add(new SearchPage(router), 'main');\n            },\n        });\n        router.register({\n            pattern: /search.*/,\n            command: CommandIDs.open,\n        });\n    },\n};\nexport default plugin;\nclass SearchPage extends ReactWidget {\n    constructor(router) {\n        super();\n        this.id = DOMUtils.createDomID();\n        this.title.label = 'Search page';\n        this._router = router;\n    }\n    _route(route) {\n        this._router.navigate(route);\n    }\n    render() {\n        const searchText = new URLSearchParams(window.location.search).get('q');\n        const settings = ServerConnection.makeSettings();\n        const url = URLExt.join(settings.baseUrl, `/api/packages/search/?q=${searchText}`);\n        const breadcrumbItems = [\n            {\n                text: 'Home',\n                link: '/',\n            },\n            {\n                text: `Search for \"${searchText}\"`,\n            },\n        ];\n        const columns = [\n            {\n                Header: 'Name',\n                accessor: 'name',\n                Cell: ({ row }) => (React.createElement(React.Fragment, null,\n                    React.createElement(\"a\", { className: \"link\", onClick: () => this._route(`/channels/${row.original.channel_name}`) }, row.original.channel_name),\n                    \"\\u2003/\\u2003\",\n                    React.createElement(\"a\", { className: \"link\", onClick: () => this._route(`/channels/${row.original.channel_name}/packages/${row.values.name}`) }, row.values.name))),\n            },\n            {\n                Header: 'Summary',\n                accessor: 'summary',\n            },\n            {\n                Header: 'Version',\n                accessor: 'current_version',\n                Cell: ({ row }) => (row.values.current_version || React.createElement(\"i\", null, \"n/a\")),\n            },\n        ];\n        return (React.createElement(\"div\", { className: \"page-contents-width-limit\" },\n            React.createElement(\"h2\", { className: \"heading2\" }, \"Packages\"),\n            React.createElement(\"div\", { className: \"flex\" },\n                React.createElement(Breadcrumbs, { items: breadcrumbItems })),\n            React.createElement(\"div\", { className: \"padding-side\" },\n                React.createElement(FetchHoc, { url: url, loadingMessage: \"Searching for packages\", genericErrorMessage: \"Error fetching API keys\" }, (data) => {\n                    return React.createElement(Table, { columns: columns, data: data || [] });\n                }))));\n    }\n}\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}