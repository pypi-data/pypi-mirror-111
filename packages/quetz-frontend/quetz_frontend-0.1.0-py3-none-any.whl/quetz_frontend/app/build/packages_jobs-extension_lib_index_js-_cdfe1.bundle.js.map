{"version":3,"sources":["webpack://@quetz-frontend/app/../../packages/jobs-extension/lib/index.js","webpack://@quetz-frontend/app/../../packages/jobs-extension/lib/jobs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAmD;AACnD,UAAU,wBAAwB;AACgB;AAClD,UAAU,yCAAyC;AACnD;AAC8B;AAC9B;AACA;AACA;AACA;AACO;AACP;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAO,EAAE,4DAAU;AAClC;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,8BAA8B,uCAAI;AAClC,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,iEAAe,MAAM,EAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB,SAAS,IAAI;AACtE,oCAAoC,KAAK;AACzC,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA,CAAC;AACD,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9D6D;AACL;AACT;AACqC;AACtC;AACf;AAC/B;AACA;AACA;AACO,mBAAmB,6DAAW;AACrC;AACA;AACA,kBAAkB,sEAAoB;AACtC;AACA;AACA,uBAAuB,0EAAoB;AAC3C;AACA;AACA;AACA,yBAAyB,+EAA6B;AACtD,oBAAoB,8DAAW;AAC/B,QAAQ,8EAA4B,QAAQ;AAC5C;AACA;AACA;AACA,+BAA+B,0EAAoB;AACnD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,gBAAgB,gDAAmB,SAAS,yCAAyC;AACrF,YAAY,gDAAmB,CAAC,iEAAW,GAAG,yBAAyB;AACvE,YAAY,gDAAmB,QAAQ,wBAAwB;AAC/D,6BAA6B,0EAAoB,IAAI,gDAAmB,CAAC,kEAAY,GAAG,wBAAwB,MAAM,gDAAmB,CAAC,wDAAK,GAAG,8DAA8D;AAChN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,QAAQ,gDAAmB,SAAS,gDAAgD,gBAAgB,IAAI;AACxG,KAAK;AACL;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,KAAK;AACL;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,KAAK;AACL;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,KAAK;AACL;AACA,gC","file":"packages_jobs-extension_lib_index_js-_cdfe1.bundle.js","sourcesContent":["import { IRouter, } from '@jupyterlab/application';\n//import { DOMUtils, ReactWidget } from '@jupyterlab/apputils';\nimport { ILogInMenu } from '@quetz-frontend/menu';\n//import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n//import * as React from 'react';\nimport { Jobs } from './jobs';\n//import Job from './job';\n/**\n * The command ids used by the main plugin.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.jobs = '@quetz-frontend:jobs';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * The main menu plugin.\n */\nconst plugin = {\n    id: CommandIDs.jobs,\n    autoStart: true,\n    requires: [IRouter, ILogInMenu],\n    activate: (app, router, menu) => {\n        const { shell, commands } = app;\n        commands.addCommand(CommandIDs.jobs, {\n            execute: () => {\n                shell.add(new Jobs(), 'main');\n            },\n        });\n        router.register({\n            pattern: /jobs.*/,\n            command: CommandIDs.jobs,\n        });\n        menu.addItem({\n            id: CommandIDs.jobs,\n            label: 'Jobs',\n            icon: 'empty',\n            api: '/jobs',\n            loggedIn: true,\n        });\n    },\n};\nexport default plugin;\n/*class JobsRouter extends ReactWidget {\n  \n  constructor() {\n    super();\n    this.id = DOMUtils.createDomID();;\n    this.title.label = 'Jobs main page';\n  }\n\n  render(): React.ReactElement {\n    return (\n      <Router basename=\"/jobs\">\n        <Switch>\n          <Route path=\"/:jobId\" render={(props) => <Job {...props} />} />\n          <Route path=\"\" component={Jobs} />\n          <Route path=\"*\" component={Jobs} />\n        </Switch>\n      </Router>\n    );\n  }\n} */\n//# sourceMappingURL=index.js.map","import { DOMUtils, ReactWidget } from '@jupyterlab/apputils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { InlineLoader, Breadcrumbs, API_STATUSES, } from '@quetz-frontend/apputils';\nimport { Table } from '@quetz-frontend/table';\nimport * as React from 'react';\n/**\n *\n */\nexport class Jobs extends ReactWidget {\n    constructor() {\n        super();\n        this.id = DOMUtils.createDomID();\n        this.title.label = 'Jobs main page';\n        this._data = new Array();\n        this._status = API_STATUSES.PENDING;\n        this._loadData();\n    }\n    _loadData() {\n        const settings = ServerConnection.makeSettings();\n        const url = URLExt.join(settings.baseUrl, '/api/jobs');\n        ServerConnection.makeRequest(url, {}, settings).then(async (resp) => {\n            resp.json().then((data) => {\n                /* TODO: Support pagination */\n                this._data = data.result;\n                this._status = API_STATUSES.SUCCESS;\n                this.update();\n            });\n        });\n    }\n    render() {\n        const breadcrumbItems = [\n            {\n                text: 'Home',\n                link: '/',\n            },\n            {\n                text: 'Jobs',\n            },\n        ];\n        return (React.createElement(\"div\", { className: \"page-contents-width-limit\" },\n            React.createElement(Breadcrumbs, { items: breadcrumbItems }),\n            React.createElement(\"h2\", { className: \"heading2\" }, \"Jobs\"),\n            this._status === API_STATUSES.PENDING ? (React.createElement(InlineLoader, { text: \"Fetching jobs\" })) : (React.createElement(Table, { data: this._data, columns: getColumns(), enableSearch: true }))));\n    }\n}\nconst getColumns = () => [\n    {\n        Header: 'Manifest',\n        accessor: 'manifest',\n        disableFilters: true,\n        Cell: ({ row }) => (\n        //@ts-ignore\n        React.createElement(\"div\", { onClick: () => window.route.navigate(`/jobs/:${row.original.id}`) }, row.values.manifest)),\n    },\n    {\n        Header: 'Created',\n        accessor: 'created',\n        Cell: ({ row }) => row.values.created,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        Cell: ({ row }) => row.values.status,\n    },\n    {\n        Header: 'Owner',\n        accessor: 'owner',\n        Cell: ({ row }) => row.values.owner.username,\n    },\n];\n//# sourceMappingURL=jobs.js.map"],"sourceRoot":""}