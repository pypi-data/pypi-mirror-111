{"version":3,"sources":["webpack://@quetz-frontend/app/../../packages/home-extension/lib/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACU;AACL;AACT;AACmB;AACrB;AACoB;AACiB;AACzC;AACV;AACxB;AACP;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA,eAAe,4DAAO;AACtB;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,iEAAe,MAAM,EAAC;AACtB,uBAAuB,6DAAW;AAClC;AACA;AACA,kBAAkB,sEAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+EAA6B;AACtD,oBAAoB,8DAAW;AAC/B,gBAAgB,gDAAmB,SAAS,yCAAyC;AACrF,YAAY,gDAAmB,QAAQ,wBAAwB;AAC/D,YAAY,gDAAmB,SAAS,oBAAoB;AAC5D,gBAAgB,gDAAmB,QAAQ,+BAA+B;AAC1E;AACA,gBAAgB,gDAAmB,OAAO,+BAA+B;AACzE,oBAAoB,gDAAmB,OAAO,6DAA6D;AAC3G,YAAY,gDAAmB,SAAS,4BAA4B;AACpE,gBAAgB,gDAAmB,CAAC,8DAAQ,GAAG,gHAAgH;AAC/J,kDAAkD,gDAAmB,CAAC,uDAAI,GAAG,0GAA0G,aAAa,IAAI,MAAM,gDAAmB,OAAO,yBAAyB;AACjQ,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM,MAAM,gDAAmB,CAAC,2CAAc;AAC9D,YAAY,gDAAmB,UAAU,wBAAwB,kBAAkB,4DAA4D;AAC/I,gBAAgB,gDAAmB,CAAC,2EAAe,GAAG,8BAA8B,0EAAW,GAAG,8EAAe,EAAE;AACnH,YAAY,gDAAmB,CAAC,sDAAY,GAAG,gBAAgB,kBAAkB,kDAAkD;AACnI;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,MAAM,MAAM,gDAAmB;AAC/C,YAAY,gDAAmB,OAAO,oBAAoB;AAC1D,YAAY,gDAAmB,OAAO,wDAAwD;AAC9F;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,MAAM,KAAK,sEAAY;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,MAAM,KAAK,sEAAY;AACvC;AACA,KAAK;AACL;AACA,iC","file":"packages_home-extension_lib_index_js-_24b01.bundle.js","sourcesContent":["import { IRouter, } from '@jupyterlab/application';\nimport { DOMUtils, ReactWidget } from '@jupyterlab/apputils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { FetchHoc, formatPlural } from '@quetz-frontend/apputils';\nimport { List } from '@quetz-frontend/table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobeAmericas, faUnlockAlt, } from '@fortawesome/free-solid-svg-icons';\nimport ReactTooltip from 'react-tooltip';\nimport * as React from 'react';\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.plugin = '@quetz-frontend/home-extension:home';\n    CommandIDs.open = '@quetz-frontend/home-extension:home/open';\n})(CommandIDs || (CommandIDs = {}));\nconst plugin = {\n    id: CommandIDs.plugin,\n    autoStart: true,\n    requires: [IRouter],\n    activate: (app, router) => {\n        const { shell, commands } = app;\n        commands.addCommand(CommandIDs.open, {\n            execute: () => {\n                shell.add(new Homepage(router), 'main');\n            },\n        });\n        router.register({\n            pattern: /home.*/,\n            command: CommandIDs.open,\n        });\n    },\n};\nexport default plugin;\nclass Homepage extends ReactWidget {\n    constructor(router) {\n        super();\n        this.id = DOMUtils.createDomID();\n        this.title.label = 'Home page';\n        this._router = router;\n    }\n    _route(route) {\n        this._router.navigate(route);\n    }\n    render() {\n        const settings = ServerConnection.makeSettings();\n        const url = URLExt.join(settings.baseUrl, '/api/channels');\n        return (React.createElement(\"div\", { className: \"page-contents-width-limit\" },\n            React.createElement(\"h2\", { className: \"heading2\" }, \"Home\"),\n            React.createElement(\"div\", { className: \"flex\" },\n                React.createElement(\"h3\", { className: \"section-heading\" }, \"Recently updated channels\"),\n                \"\\u2003\",\n                React.createElement(\"p\", { className: \"minor-paragraph\" },\n                    React.createElement(\"a\", { className: \"link\", onClick: () => this._route('/channels') }, \"View all\"))),\n            React.createElement(\"div\", { className: \"padding-side\" },\n                React.createElement(FetchHoc, { url: url, loadingMessage: \"Fetching list of channels\", genericErrorMessage: \"Error fetching list of channels\" }, (channels) => {\n                    return channels.length > 0 ? (React.createElement(List, { data: channels.slice(0, 5), columns: getChannelsListColumns(), to: (rowData) => this._route(`/channels/${rowData.name}`) })) : (React.createElement(\"p\", { className: \"paragraph\" }, \"No channels available\"));\n                }))));\n    }\n}\nconst getChannelsListColumns = () => [\n    {\n        Header: '',\n        accessor: 'name',\n        Cell: ({ row }) => (React.createElement(React.Fragment, null,\n            React.createElement(\"span\", { \"data-for\": `tooltip-${row.original.name}`, \"data-tip\": row.original.private ? 'Private' : 'Public' },\n                React.createElement(FontAwesomeIcon, { icon: row.original.private ? faUnlockAlt : faGlobeAmericas })),\n            React.createElement(ReactTooltip, { id: `tooltip-${row.original.name}`, place: \"right\", type: \"dark\", effect: \"solid\" }))),\n        width: 5,\n    },\n    {\n        Header: '',\n        accessor: 'user.profile.name',\n        Cell: ({ row }) => (React.createElement(\"div\", null,\n            React.createElement(\"p\", { className: \"text\" }, row.original.name),\n            React.createElement(\"p\", { className: \"minor-paragraph channel-list-description\" }, row.original.description))),\n        width: 45,\n    },\n    {\n        Header: '',\n        accessor: 'user.username',\n        Cell: ({ row }) => formatPlural(row.original.packages_count, 'package'),\n        width: 35,\n    },\n    {\n        Header: '',\n        accessor: 'role',\n        Cell: ({ row }) => formatPlural(row.original.packages_count, 'member'),\n        width: 20,\n    },\n];\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}