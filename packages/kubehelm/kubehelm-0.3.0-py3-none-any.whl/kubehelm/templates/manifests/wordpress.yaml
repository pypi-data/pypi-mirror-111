# Source: wordpress/templates/externaldb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wordpress-{{ app_name }}-externaldb
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: {{ app_name }}
type: Opaque
data:
  mariadb-password: ""
---
# Source: wordpress/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wordpress-{{ app_name }}
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: {{ app_name }}
type: Opaque
data:
  wordpress-password: "dnY0OU5BQTBScQ=="
---
# Source: wordpress/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: wordpress-{{ app_name }}
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: {{ app_name }}
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: wordpress/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wordpress-{{ app_name }}
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: {{ app_name }}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: {{ app_name }}

  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    
---
# Source: wordpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-{{ app_name }}
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: {{ app_name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: wordpress
      app.kubernetes.io/instance: {{ app_name }}
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wordpress
        app.kubernetes.io/instance: {{ app_name }}
    spec:
      
      serviceAccountName: default
      # yamllint disable rule:indentation
      hostAliases:
        - hostnames:
          - status.localhost
          ip: 127.0.0.1
      # yamllint enable rule:indentation
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: wordpress
                    app.kubernetes.io/instance: {{ app_name }}
                namespaces:
                  - "{{ namespace }}"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: wordpress
          image: docker.io/bitnami/wordpress:5.7.0-debian-10-r11
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MARIADB_HOST
              value: "localhost"
            - name: MARIADB_PORT_NUMBER
              value: "3306"
            - name: WORDPRESS_DATABASE_NAME
              value: "bitnami_wordpress"
            - name: WORDPRESS_DATABASE_USER
              value: "bn_wordpress"
            - name: WORDPRESS_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-{{ app_name }}-externaldb
                  key: mariadb-password
            - name: WORDPRESS_USERNAME
              value: "user"
            - name: WORDPRESS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-{{ app_name }}
                  key: wordpress-password
            - name: WORDPRESS_EMAIL
              value: "user@example.com"
            - name: WORDPRESS_FIRST_NAME
              value: "FirstName"
            - name: WORDPRESS_LAST_NAME
              value: "LastName"
            - name: WORDPRESS_HTACCESS_OVERRIDE_NONE
              value: "no"
            - name: WORDPRESS_HTACCESS_PERSISTENCE_ENABLED
              value: "no"
            - name: WORDPRESS_BLOG_NAME
              value: "User's Blog!"
            - name: WORDPRESS_SKIP_INSTALL
              value: "no"
            - name: WORDPRESS_TABLE_PREFIX
              value: "wp_"
            - name: WORDPRESS_SCHEME
              value: "http"
            - name: WORDPRESS_EXTRA_WP_CONFIG_CONTENT
              value: ""
          envFrom:
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders: []
              path: /wp-admin/install.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders: []
              path: /wp-login.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - mountPath: /bitnami/wordpress
              name: wordpress-data
              subPath: wordpress
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: wordpress-{{ app_name }}
---
# Source: wordpress/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: wordpress-{{ app_name }}
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: {{ app_name }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: {{ namespace }}.asim.com
      http:
        paths:
          - path: /{{ app_name }}
            pathType: ImplementationSpecific
            backend:
              serviceName: wordpress-{{ app_name }}
              servicePort: http
  tls:
    - hosts:
        - {{ namespace }}.asim.com
      secretName: certificate-wordpress-{{ app_name }}
