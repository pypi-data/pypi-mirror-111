[tool.poetry]
name = "nautobot-eox-notices"
version = "0.2.0"
description = "Tracks EoX Notices for Nautobot objects."
authors = ["Mikhail Yohman <mikhail.yohman@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/fragmentedpacket/nautobot-eox-notices"
repository = "https://github.com/fragmentedpacket/nautobot-eox-notices"
keywords = ["nautobot", "nautobot-plugin"]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "eox_notices" },
]

[tool.poetry.dependencies]
python = "^3.6.2"
nautobot = { version = "*", optional = true }

[tool.poetry.extras]
nautobot = ["nautobot"]

[tool.poetry.dev-dependencies]
invoke = "^1.4.1"
black = "^21.6b0"
bandit = "^1.6.2"
pylint = "^2.5.2"
pylint-django = "~2.3.0"
pydocstyle = "^5.0.2"
flake8 = "^3.8.3"
pytest-django = "^4.1.0"
toml = "^0.10.2"
sentry-sdk = "^1.0.0"
django-debug-toolbar = "^3.2.1"
coverage = "^5.5"

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """
    line-too-long,
    bad-continuation,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
python_paths = "./"
testpaths = "tests/"
addopts = "-vv"
