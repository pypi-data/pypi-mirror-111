{"version":3,"sources":["webpack:///./app/components/quickTrace/styles.tsx","webpack:///./app/components/quickTrace/index.tsx","webpack:///./app/utils/docs.tsx","webpack:///./app/utils/performance/quickTrace/traceLiteQuery.tsx","webpack:///./app/utils/performance/quickTrace/quickTraceQuery.tsx","webpack:///./app/utils/performance/quickTrace/traceFullQuery.tsx"],"names":["SectionSubtext","p","theme","subText","fontSizeMedium","QuickTraceContainer","nodeColors","error","color","white","background","red300","border","warning","textColor","black","EventNode","Tag","type","Background","TraceConnector","space","DropdownContainer","DropdownMenuHeader","MenuHeader","backgroundSecondary","first","StyledMenuItem","MenuItem","width","innerBorder","MenuItemContent","DropdownItem","children","onSelect","allowDefaultEvent","to","DropdownItemSubContainer","StyledTruncate","Truncate","ErrorNodeContent","ExternalDropdownLink","ExternalLink","SingleEventHoverText","event","value","transaction","maxLength","leftTrim","trimRegex","expandable","getDuration","FRONTEND_PLATFORMS","frontend","mobile","BACKEND_PLATFORMS","backend","serverless","TOOLTIP_PREFIX","root","ancestors","parent","current","descendants","QuickTrace","parsedQuickTrace","quickTrace","location","organization","anchor","errorDest","transactionDest","parseQuickTrace","traceLength","trace","length","nodes","push","EventNodeSelector","events","currentEvent","text","t","nodeKey","tn","currentNode","orgId","slug","slugs","project_slug","project","projects","find","platform","includes","MissingServiceNode","connectorSide","handleDropdownItem","key","extra","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","id","node_key","numEvents","errors","flatMap","size","filter","event_id","hoverText","target","generateSingleErrorTarget","generateSingleTransactionTarget","StyledEventNode","onClick","handleNode","tct","eventPrefix","eventType","caret","title","anchorRight","slice","map","DropdownNodeItem","subtext","generateTraceTarget","disableLink","hideName","avatarSize","isQuickTraceEvent","expandDirection","position","containerDisplayMode","icon","HIDE_MISSING_SERVICE_KEY","HIDE_MISSING_EXPIRES","readHideMissingServiceState","localStorage","Date","getTime","hideMissing","props","now","toString","setState","this","state","docPlatform","getDocsPlatform","docsHref","href","trackExternalLink","dismissMissingService","React","platforms","performancePlatforms","performanceOnly","index","indexOf","prefix","substring","validDocPlatform","validPerformancePrefix","getConfigureTracingDocsLink","docsPlatform","getTraceLiteRequestPayload","eventId","additionalApiPayload","getTraceRequestPayload","Object","assign","EmptyTrace","isLoading","TraceLiteQuery","traceId","start","end","statsPeriod","eventView","makeEventView","route","getRequestPayload","beforeFetch","tableData","rest","withApi","QuickTraceQuery","contexts","trace_id","getTraceTimeRangeFromEvent","traceLiteResults","traceFullResults","traces","subtrace","flattenRelevantPaths","e","isCurrentEvent","getTraceFullRequestPayload","detailed","GenericTraceFullQuery","TraceFullQuery","TraceFullDetailedQuery"],"mappings":"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","file":"chunks/app_components_quickTrace_index_tsx-app_utils_performance_quickTrace_quickTraceQuery_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport MenuHeader from 'app/components/actions/menuHeader';\nimport ExternalLink from 'app/components/links/externalLink';\nimport MenuItem from 'app/components/menuItem';\nimport Tag, {Background} from 'app/components/tag';\nimport Truncate from 'app/components/truncate';\nimport space from 'app/styles/space';\nimport {getDuration} from 'app/utils/formatters';\nimport {QuickTraceEvent} from 'app/utils/performance/quickTrace/types';\nimport {Theme} from 'app/utils/theme';\n\nexport const SectionSubtext = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport const QuickTraceContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  height: 24px;\n`;\n\nconst nodeColors = (theme: Theme) => ({\n  error: {\n    color: theme.white,\n    background: theme.red300,\n    border: theme.red300,\n  },\n  warning: {\n    color: theme.red300,\n    background: theme.background,\n    border: theme.red300,\n  },\n  white: {\n    color: theme.textColor,\n    background: theme.background,\n    border: theme.textColor,\n  },\n  black: {\n    color: theme.background,\n    background: theme.textColor,\n    border: theme.textColor,\n  },\n});\n\nexport const EventNode = styled(Tag)`\n  span {\n    display: flex;\n    color: ${p => nodeColors(p.theme)[p.type || 'white'].color};\n  }\n  & ${/* sc-selector */ Background} {\n    background-color: ${p => nodeColors(p.theme)[p.type || 'white'].background};\n    border: 1px solid ${p => nodeColors(p.theme)[p.type || 'white'].border};\n  }\n`;\n\nexport const TraceConnector = styled('div')`\n  width: ${space(1)};\n  border-top: 1px solid ${p => p.theme.textColor};\n`;\n\n/**\n * The DropdownLink component is styled directly with less and the way the\n * elements are laid out within means we can't apply any styles directly\n * using emotion. Instead, we wrap it all inside a span and indirectly\n * style it here.\n */\nexport const DropdownContainer = styled('span')`\n  .dropdown-menu {\n    padding: 0;\n  }\n`;\n\nexport const DropdownMenuHeader = styled(MenuHeader)<{first?: boolean}>`\n  background: ${p => p.theme.backgroundSecondary};\n  ${p => p.first && 'border-radius: 2px'};\n  padding: ${space(1)} ${space(1.5)};\n`;\n\nconst StyledMenuItem = styled(MenuItem)<{width: 'small' | 'large'}>`\n  width: ${p => (p.width === 'large' ? '350px' : '200px')};\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.innerBorder};\n  }\n`;\n\nconst MenuItemContent = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\ntype DropdownItemProps = {\n  children: React.ReactNode;\n  to?: string | LocationDescriptor;\n  allowDefaultEvent?: boolean;\n  onSelect?: (eventKey: any) => void;\n  width?: 'small' | 'large';\n};\n\nexport function DropdownItem({\n  children,\n  onSelect,\n  allowDefaultEvent,\n  to,\n  width = 'large',\n}: DropdownItemProps) {\n  return (\n    <StyledMenuItem\n      to={to}\n      onSelect={onSelect}\n      width={width}\n      allowDefaultEvent={allowDefaultEvent}\n    >\n      <MenuItemContent>{children}</MenuItemContent>\n    </StyledMenuItem>\n  );\n}\n\nexport const DropdownItemSubContainer = styled('div')`\n  display: flex;\n  flex-direction: row;\n\n  > a {\n    padding-left: 0 !important;\n  }\n`;\n\nexport const StyledTruncate = styled(Truncate)`\n  padding-left: ${space(1)};\n  white-space: nowrap;\n`;\n\nexport const ErrorNodeContent = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  grid-gap: ${space(0.25)};\n  align-items: center;\n`;\n\nexport const ExternalDropdownLink = styled(ExternalLink)`\n  display: inherit !important;\n  padding: 0 !important;\n  color: ${p => p.theme.textColor};\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport function SingleEventHoverText({event}: {event: QuickTraceEvent}) {\n  return (\n    <div>\n      <Truncate\n        value={event.transaction}\n        maxLength={30}\n        leftTrim\n        trimRegex={/\\.|\\//g}\n        expandable={false}\n      />\n      <div>\n        {getDuration(\n          event['transaction.duration'] / 1000,\n          event['transaction.duration'] < 1000 ? 0 : 2,\n          true\n        )}\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {Location, LocationDescriptor} from 'history';\n\nimport DropdownLink from 'app/components/dropdownLink';\nimport ProjectBadge from 'app/components/idBadge/projectBadge';\nimport {\n  ErrorDestination,\n  generateSingleErrorTarget,\n  generateSingleTransactionTarget,\n  generateTraceTarget,\n  isQuickTraceEvent,\n  TransactionDestination,\n} from 'app/components/quickTrace/utils';\nimport Tooltip from 'app/components/tooltip';\nimport {backend, frontend, mobile, serverless} from 'app/data/platformCategories';\nimport {IconFire} from 'app/icons';\nimport {t, tct, tn} from 'app/locale';\nimport {OrganizationSummary} from 'app/types';\nimport {Event} from 'app/types/event';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport {getDocsPlatform} from 'app/utils/docs';\nimport {getDuration} from 'app/utils/formatters';\nimport localStorage from 'app/utils/localStorage';\nimport {\n  QuickTrace as QuickTraceType,\n  QuickTraceEvent,\n  TraceError,\n} from 'app/utils/performance/quickTrace/types';\nimport {parseQuickTrace} from 'app/utils/performance/quickTrace/utils';\nimport Projects from 'app/utils/projects';\nimport {Theme} from 'app/utils/theme';\n\nconst FRONTEND_PLATFORMS: string[] = [...frontend, ...mobile];\nconst BACKEND_PLATFORMS: string[] = [...backend, ...serverless];\n\nimport {\n  DropdownContainer,\n  DropdownItem,\n  DropdownItemSubContainer,\n  DropdownMenuHeader,\n  ErrorNodeContent,\n  EventNode,\n  ExternalDropdownLink,\n  QuickTraceContainer,\n  SectionSubtext,\n  SingleEventHoverText,\n  StyledTruncate,\n  TraceConnector,\n} from './styles';\n\nconst TOOLTIP_PREFIX = {\n  root: 'root',\n  ancestors: 'ancestor',\n  parent: 'parent',\n  current: '',\n  children: 'child',\n  descendants: 'descendant',\n};\n\ntype QuickTraceProps = Pick<\n  EventNodeSelectorProps,\n  'anchor' | 'errorDest' | 'transactionDest'\n> & {\n  quickTrace: QuickTraceType;\n  event: Event;\n  location: Location;\n  organization: OrganizationSummary;\n};\n\nexport default function QuickTrace({\n  event,\n  quickTrace,\n  location,\n  organization,\n  anchor,\n  errorDest,\n  transactionDest,\n}: QuickTraceProps) {\n  let parsedQuickTrace;\n  try {\n    parsedQuickTrace = parseQuickTrace(quickTrace, event, organization);\n  } catch (error) {\n    return <React.Fragment>{'\\u2014'}</React.Fragment>;\n  }\n\n  const traceLength = quickTrace.trace && quickTrace.trace.length;\n  const {root, ancestors, parent, children, descendants, current} = parsedQuickTrace;\n\n  const nodes: React.ReactNode[] = [];\n\n  if (root) {\n    nodes.push(\n      <EventNodeSelector\n        key=\"root-node\"\n        location={location}\n        organization={organization}\n        events={[root]}\n        currentEvent={event}\n        text={t('Root')}\n        anchor={anchor}\n        nodeKey=\"root\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n    nodes.push(<TraceConnector key=\"root-connector\" />);\n  }\n\n  if (ancestors?.length) {\n    nodes.push(\n      <EventNodeSelector\n        key=\"ancestors-node\"\n        location={location}\n        organization={organization}\n        events={ancestors}\n        currentEvent={event}\n        text={tn('%s Ancestor', '%s Ancestors', ancestors.length)}\n        anchor={anchor}\n        nodeKey=\"ancestors\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n    nodes.push(<TraceConnector key=\"ancestors-connector\" />);\n  }\n\n  if (parent) {\n    nodes.push(\n      <EventNodeSelector\n        key=\"parent-node\"\n        location={location}\n        organization={organization}\n        events={[parent]}\n        currentEvent={event}\n        text={t('Parent')}\n        anchor={anchor}\n        nodeKey=\"parent\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n    nodes.push(<TraceConnector key=\"parent-connector\" />);\n  }\n\n  const currentNode = (\n    <EventNodeSelector\n      key=\"current-node\"\n      location={location}\n      organization={organization}\n      text={t('This Event')}\n      events={[current]}\n      currentEvent={event}\n      anchor={anchor}\n      nodeKey=\"current\"\n      errorDest={errorDest}\n      transactionDest={transactionDest}\n    />\n  );\n\n  if (traceLength === 1) {\n    nodes.push(\n      <Projects\n        key=\"missing-services\"\n        orgId={organization.slug}\n        slugs={[current.project_slug]}\n      >\n        {({projects}) => {\n          const project = projects.find(p => p.slug === current.project_slug);\n          if (project?.platform) {\n            if (BACKEND_PLATFORMS.includes(project.platform as string)) {\n              return (\n                <React.Fragment>\n                  <MissingServiceNode\n                    anchor={anchor}\n                    organization={organization}\n                    platform={project.platform}\n                    connectorSide=\"right\"\n                  />\n                  {currentNode}\n                </React.Fragment>\n              );\n            } else if (FRONTEND_PLATFORMS.includes(project.platform as string)) {\n              return (\n                <React.Fragment>\n                  {currentNode}\n                  <MissingServiceNode\n                    anchor={anchor}\n                    organization={organization}\n                    platform={project.platform}\n                    connectorSide=\"left\"\n                  />\n                </React.Fragment>\n              );\n            }\n          }\n          return currentNode;\n        }}\n      </Projects>\n    );\n  } else {\n    nodes.push(currentNode);\n  }\n\n  if (children.length) {\n    nodes.push(<TraceConnector key=\"children-connector\" />);\n    nodes.push(\n      <EventNodeSelector\n        key=\"children-node\"\n        location={location}\n        organization={organization}\n        events={children}\n        currentEvent={event}\n        text={tn('%s Child', '%s Children', children.length)}\n        anchor={anchor}\n        nodeKey=\"children\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n  }\n\n  if (descendants?.length) {\n    nodes.push(<TraceConnector key=\"descendants-connector\" />);\n    nodes.push(\n      <EventNodeSelector\n        key=\"descendants-node\"\n        location={location}\n        organization={organization}\n        events={descendants}\n        currentEvent={event}\n        text={tn('%s Descendant', '%s Descendants', descendants.length)}\n        anchor={anchor}\n        nodeKey=\"descendants\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n  }\n\n  return <QuickTraceContainer>{nodes}</QuickTraceContainer>;\n}\n\nfunction handleNode(key: string, organization: OrganizationSummary) {\n  trackAnalyticsEvent({\n    eventKey: 'quick_trace.node.clicked',\n    eventName: 'Quick Trace: Node clicked',\n    organization_id: parseInt(organization.id, 10),\n    node_key: key,\n  });\n}\n\nfunction handleDropdownItem(\n  key: string,\n  organization: OrganizationSummary,\n  extra: boolean\n) {\n  trackAnalyticsEvent({\n    eventKey: 'quick_trace.dropdown.clicked' + (extra ? '_extra' : ''),\n    eventName: 'Quick Trace: Dropdown clicked',\n    organization_id: parseInt(organization.id, 10),\n    node_key: key,\n  });\n}\n\ntype EventNodeSelectorProps = {\n  location: Location;\n  organization: OrganizationSummary;\n  events: QuickTraceEvent[];\n  text: React.ReactNode;\n  currentEvent: Event;\n  numEvents?: number;\n  anchor: 'left' | 'right';\n  nodeKey: keyof typeof TOOLTIP_PREFIX;\n  errorDest: ErrorDestination;\n  transactionDest: TransactionDestination;\n};\n\nfunction EventNodeSelector({\n  location,\n  organization,\n  events = [],\n  text,\n  currentEvent,\n  nodeKey,\n  anchor,\n  errorDest,\n  transactionDest,\n  numEvents = 5,\n}: EventNodeSelectorProps) {\n  let errors: TraceError[] = events.flatMap(event => event.errors ?? []);\n\n  let type: keyof Theme['tag'] = nodeKey === 'current' ? 'black' : 'white';\n  if (errors.length > 0) {\n    type = nodeKey === 'current' ? 'error' : 'warning';\n    text = (\n      <ErrorNodeContent>\n        <IconFire size=\"xs\" />\n        {text}\n      </ErrorNodeContent>\n    );\n  }\n\n  // make sure to exclude the current event from the dropdown\n  events = events.filter(event => event.event_id !== currentEvent.id);\n  errors = errors.filter(error => error.event_id !== currentEvent.id);\n\n  if (events.length + errors.length === 0) {\n    return <EventNode type={type}>{text}</EventNode>;\n  } else if (events.length + errors.length === 1) {\n    /**\n     * When there is only 1 event, clicking the node should take the user directly to\n     * the event without additional steps.\n     */\n    const hoverText = errors.length ? (\n      t('View the error for this Transaction')\n    ) : (\n      <SingleEventHoverText event={events[0]} />\n    );\n    const target = errors.length\n      ? generateSingleErrorTarget(errors[0], organization, location, errorDest)\n      : generateSingleTransactionTarget(\n          events[0],\n          organization,\n          location,\n          transactionDest\n        );\n    return (\n      <StyledEventNode\n        text={text}\n        hoverText={hoverText}\n        to={target}\n        onClick={() => handleNode(nodeKey, organization)}\n        type={type}\n      />\n    );\n  } else {\n    /**\n     * When there is more than 1 event, clicking the node should expand a dropdown to\n     * allow the user to select which event to go to.\n     */\n    const hoverText = tct('View [eventPrefix] [eventType]', {\n      eventPrefix: TOOLTIP_PREFIX[nodeKey],\n      eventType:\n        errors.length && events.length\n          ? 'events'\n          : events.length\n          ? 'transactions'\n          : 'errors',\n    });\n    return (\n      <DropdownContainer>\n        <DropdownLink\n          caret={false}\n          title={<StyledEventNode text={text} hoverText={hoverText} type={type} />}\n          anchorRight={anchor === 'right'}\n        >\n          {errors.length > 0 && (\n            <DropdownMenuHeader first>\n              {tn('Related Error', 'Related Errors', errors.length)}\n            </DropdownMenuHeader>\n          )}\n          {errors.slice(0, numEvents).map(error => {\n            const target = generateSingleErrorTarget(\n              error,\n              organization,\n              location,\n              errorDest\n            );\n            return (\n              <DropdownNodeItem\n                key={error.event_id}\n                event={error}\n                to={target}\n                allowDefaultEvent\n                onSelect={() => handleDropdownItem(nodeKey, organization, false)}\n                organization={organization}\n                anchor={anchor}\n              />\n            );\n          })}\n          {events.length > 0 && (\n            <DropdownMenuHeader first={errors.length === 0}>\n              {tn('Transaction', 'Transactions', events.length)}\n            </DropdownMenuHeader>\n          )}\n          {events.slice(0, numEvents).map(event => {\n            const target = generateSingleTransactionTarget(\n              event,\n              organization,\n              location,\n              transactionDest\n            );\n            return (\n              <DropdownNodeItem\n                key={event.event_id}\n                event={event}\n                to={target}\n                onSelect={() => handleDropdownItem(nodeKey, organization, false)}\n                allowDefaultEvent\n                organization={organization}\n                subtext={getDuration(\n                  event['transaction.duration'] / 1000,\n                  event['transaction.duration'] < 1000 ? 0 : 2,\n                  true\n                )}\n                anchor={anchor}\n              />\n            );\n          })}\n          {(errors.length > numEvents || events.length > numEvents) && (\n            <DropdownItem\n              to={generateTraceTarget(currentEvent, organization)}\n              allowDefaultEvent\n              onSelect={() => handleDropdownItem(nodeKey, organization, true)}\n            >\n              {t('View all events')}\n            </DropdownItem>\n          )}\n        </DropdownLink>\n      </DropdownContainer>\n    );\n  }\n}\n\ntype DropdownNodeProps = {\n  event: TraceError | QuickTraceEvent;\n  organization: OrganizationSummary;\n  anchor: 'left' | 'right';\n  allowDefaultEvent?: boolean;\n  onSelect?: (eventKey: any) => void;\n  to?: LocationDescriptor;\n  subtext?: string;\n};\n\nfunction DropdownNodeItem({\n  event,\n  onSelect,\n  to,\n  allowDefaultEvent,\n  organization,\n  subtext,\n  anchor,\n}: DropdownNodeProps) {\n  return (\n    <DropdownItem to={to} onSelect={onSelect} allowDefaultEvent={allowDefaultEvent}>\n      <DropdownItemSubContainer>\n        <Projects orgId={organization.slug} slugs={[event.project_slug]}>\n          {({projects}) => {\n            const project = projects.find(p => p.slug === event.project_slug);\n            return (\n              <ProjectBadge\n                disableLink\n                hideName\n                project={project ? project : {slug: event.project_slug}}\n                avatarSize={16}\n              />\n            );\n          }}\n        </Projects>\n        {isQuickTraceEvent(event) ? (\n          <StyledTruncate\n            value={event.transaction}\n            // expand in the opposite direction of the anchor\n            expandDirection={anchor === 'left' ? 'right' : 'left'}\n            maxLength={35}\n            leftTrim\n            trimRegex={/\\.|\\//g}\n          />\n        ) : (\n          <StyledTruncate\n            value={event.title}\n            // expand in the opposite direction of the anchor\n            expandDirection={anchor === 'left' ? 'right' : 'left'}\n            maxLength={45}\n          />\n        )}\n      </DropdownItemSubContainer>\n      {subtext && <SectionSubtext>{subtext}</SectionSubtext>}\n    </DropdownItem>\n  );\n}\n\ntype EventNodeProps = {\n  text: React.ReactNode;\n  hoverText: React.ReactNode;\n  to?: LocationDescriptor;\n  onClick?: (eventKey: any) => void;\n  type?: keyof Theme['tag'];\n};\n\nfunction StyledEventNode({text, hoverText, to, onClick, type = 'white'}: EventNodeProps) {\n  return (\n    <Tooltip position=\"top\" containerDisplayMode=\"inline-flex\" title={hoverText}>\n      <EventNode type={type} icon={null} to={to} onClick={onClick}>\n        {text}\n      </EventNode>\n    </Tooltip>\n  );\n}\n\ntype MissingServiceProps = Pick<QuickTraceProps, 'anchor' | 'organization'> & {\n  connectorSide: 'left' | 'right';\n  platform: string;\n};\ntype MissingServiceState = {\n  hideMissing: boolean;\n};\n\nconst HIDE_MISSING_SERVICE_KEY = 'quick-trace:hide-missing-services';\n// 30 days\nconst HIDE_MISSING_EXPIRES = 1000 * 60 * 60 * 24 * 30;\n\nfunction readHideMissingServiceState() {\n  const value = localStorage.getItem(HIDE_MISSING_SERVICE_KEY);\n  if (value === null) {\n    return false;\n  }\n  const expires = parseInt(value, 10);\n  const now = new Date().getTime();\n  return expires > now;\n}\n\nclass MissingServiceNode extends React.Component<\n  MissingServiceProps,\n  MissingServiceState\n> {\n  state: MissingServiceState = {\n    hideMissing: readHideMissingServiceState(),\n  };\n\n  dismissMissingService = () => {\n    const {organization, platform} = this.props;\n    const now = new Date().getTime();\n    localStorage.setItem(\n      HIDE_MISSING_SERVICE_KEY,\n      (now + HIDE_MISSING_EXPIRES).toString()\n    );\n    this.setState({hideMissing: true});\n    trackAnalyticsEvent({\n      eventKey: 'quick_trace.missing_service.dismiss',\n      eventName: 'Quick Trace: Missing Service Dismissed',\n      organization_id: parseInt(organization.id, 10),\n      platform,\n    });\n  };\n\n  trackExternalLink = () => {\n    const {organization, platform} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'quick_trace.missing_service.docs',\n      eventName: 'Quick Trace: Missing Service Clicked',\n      organization_id: parseInt(organization.id, 10),\n      platform,\n    });\n  };\n\n  render() {\n    const {hideMissing} = this.state;\n    const {anchor, connectorSide, platform} = this.props;\n    if (hideMissing) {\n      return null;\n    }\n\n    const docPlatform = getDocsPlatform(platform, true);\n    const docsHref =\n      docPlatform === null || docPlatform === 'javascript'\n        ? 'https://docs.sentry.io/platforms/javascript/performance/connect-services/'\n        : `https://docs.sentry.io/platforms/${docPlatform}/performance#connecting-services`;\n    return (\n      <React.Fragment>\n        {connectorSide === 'left' && <TraceConnector />}\n        <DropdownContainer>\n          <DropdownLink\n            caret={false}\n            title={\n              <StyledEventNode\n                type=\"white\"\n                hoverText={t('No services connected')}\n                text=\"???\"\n              />\n            }\n            anchorRight={anchor === 'right'}\n          >\n            <DropdownItem width=\"small\">\n              <ExternalDropdownLink href={docsHref} onClick={this.trackExternalLink}>\n                {t('Connect to a service')}\n              </ExternalDropdownLink>\n            </DropdownItem>\n            <DropdownItem onSelect={this.dismissMissingService} width=\"small\">\n              {t('Dismiss')}\n            </DropdownItem>\n          </DropdownLink>\n        </DropdownContainer>\n        {connectorSide === 'right' && <TraceConnector />}\n      </React.Fragment>\n    );\n  }\n}\n","import {AvatarProject} from 'app/types';\n\nconst platforms = [\n  'dotnet',\n  'android',\n  'apple',\n  'dart',\n  'elixir',\n  'flutter',\n  'go',\n  'java',\n  'javascript',\n  'native',\n  'node',\n  'perl',\n  'php',\n  'python',\n  'react-native',\n  'ruby',\n  'rust',\n  'unity',\n] as const;\n\nexport type DocPlatform = typeof platforms[number];\n\nconst performancePlatforms: DocPlatform[] = [\n  'dotnet',\n  'android',\n  'apple',\n  'go',\n  'java',\n  'javascript',\n  'node',\n  'php',\n  'python',\n  'react-native',\n  'ruby',\n];\n\nfunction validDocPlatform(platform: any): platform is DocPlatform {\n  return platforms.includes(platform);\n}\n\nexport function getDocsPlatform(\n  platform: string,\n  performanceOnly: boolean\n): DocPlatform | null {\n  // react-native is the only platform that has a dash, and supports performance so we can skip that check\n  if (platform === 'react-native') {\n    return 'react-native';\n  }\n  const index = platform.indexOf('-');\n  const prefix = index >= 0 ? platform.substring(0, index) : platform;\n  if (validDocPlatform(prefix)) {\n    const validPerformancePrefix = performancePlatforms.includes(prefix);\n    if ((performanceOnly && validPerformancePrefix) || !performanceOnly) {\n      return prefix;\n    }\n  }\n  // can't find a matching docs platform\n  return null;\n}\n\nexport function getConfigureTracingDocsLink(\n  project: AvatarProject | undefined\n): string | null {\n  const platform = project?.platform ?? null;\n  const docsPlatform = platform ? getDocsPlatform(platform, true) : null;\n  return docsPlatform === null\n    ? null // this platform does not support performance\n    : `https://docs.sentry.io/platforms/${docsPlatform}/performance/`;\n}\n","import * as React from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'app/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  PartialQuickTrace,\n  TraceLite,\n  TraceRequestProps,\n} from 'app/utils/performance/quickTrace/types';\nimport {\n  beforeFetch,\n  getTraceRequestPayload,\n  makeEventView,\n} from 'app/utils/performance/quickTrace/utils';\nimport withApi from 'app/utils/withApi';\n\ntype AdditionalQueryProps = {\n  eventId: string;\n};\n\ntype TraceLiteQueryChildrenProps = BaseTraceChildrenProps &\n  Omit<PartialQuickTrace, 'trace'> & {\n    trace: TraceLite | null;\n  };\n\ntype QueryProps = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceLiteQueryChildrenProps) => React.ReactNode;\n  };\n\nfunction getTraceLiteRequestPayload({\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload = getTraceRequestPayload(props);\n  return Object.assign({event_id: eventId}, additionalApiPayload);\n}\n\nfunction EmptyTrace({children}: Pick<QueryProps, 'children'>) {\n  return (\n    <React.Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        trace: null,\n        type: 'partial',\n      })}\n    </React.Fragment>\n  );\n}\n\nfunction TraceLiteQuery({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps) {\n  if (!traceId) {\n    return <EmptyTrace>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<TraceLite, AdditionalQueryProps>\n      route={`events-trace-light/${traceId}`}\n      getRequestPayload={getTraceLiteRequestPayload}\n      beforeFetch={beforeFetch}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          trace: tableData || null,\n          type: 'partial',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(TraceLiteQuery);\n","import * as React from 'react';\n\nimport {Event} from 'app/types/event';\nimport {DiscoverQueryProps} from 'app/utils/discover/genericDiscoverQuery';\nimport {TraceFullQuery} from 'app/utils/performance/quickTrace/traceFullQuery';\nimport TraceLiteQuery from 'app/utils/performance/quickTrace/traceLiteQuery';\nimport {QuickTraceQueryChildrenProps} from 'app/utils/performance/quickTrace/types';\nimport {\n  flattenRelevantPaths,\n  getTraceTimeRangeFromEvent,\n  isCurrentEvent,\n} from 'app/utils/performance/quickTrace/utils';\n\ntype QueryProps = Omit<DiscoverQueryProps, 'api' | 'eventView'> & {\n  event: Event;\n  children: (props: QuickTraceQueryChildrenProps) => React.ReactNode;\n};\n\nexport default function QuickTraceQuery({children, event, ...props}: QueryProps) {\n  const traceId = event.contexts?.trace?.trace_id;\n\n  if (!traceId) {\n    return (\n      <React.Fragment>\n        {children({\n          isLoading: false,\n          error: null,\n          trace: [],\n          type: 'empty',\n          currentEvent: null,\n        })}\n      </React.Fragment>\n    );\n  }\n\n  const {start, end} = getTraceTimeRangeFromEvent(event);\n\n  return (\n    <TraceLiteQuery\n      eventId={event.id}\n      traceId={traceId}\n      start={start}\n      end={end}\n      {...props}\n    >\n      {traceLiteResults => (\n        <TraceFullQuery\n          eventId={event.id}\n          traceId={traceId}\n          start={start}\n          end={end}\n          {...props}\n        >\n          {traceFullResults => {\n            if (\n              !traceFullResults.isLoading &&\n              traceFullResults.error === null &&\n              traceFullResults.traces !== null\n            ) {\n              for (const subtrace of traceFullResults.traces) {\n                try {\n                  const trace = flattenRelevantPaths(event, subtrace);\n                  return children({\n                    ...traceFullResults,\n                    trace,\n                    currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n                  });\n                } catch {\n                  // let this fall through and check the next subtrace\n                  // or use the trace lite results\n                }\n              }\n            }\n\n            if (\n              !traceLiteResults.isLoading &&\n              traceLiteResults.error === null &&\n              traceLiteResults.trace !== null\n            ) {\n              const {trace} = traceLiteResults;\n              return children({\n                ...traceLiteResults,\n                currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n              });\n            }\n\n            return children({\n              // only use the light results loading state if it didn't error\n              // if it did, we should rely on the full results\n              isLoading: traceLiteResults.error\n                ? traceFullResults.isLoading\n                : traceLiteResults.isLoading || traceFullResults.isLoading,\n              // swallow any errors from the light results because we\n              // should rely on the full results in this situations\n              error: traceFullResults.error,\n              trace: [],\n              // if we reach this point but there were some traces in the full results,\n              // that means there were other transactions in the trace, but the current\n              // event could not be found\n              type: traceFullResults.traces?.length ? 'missing' : 'empty',\n              currentEvent: null,\n            });\n          }}\n        </TraceFullQuery>\n      )}\n    </TraceLiteQuery>\n  );\n}\n","import * as React from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'app/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  FullQuickTrace,\n  TraceFull,\n  TraceFullDetailed,\n  TraceRequestProps,\n} from 'app/utils/performance/quickTrace/types';\nimport {\n  beforeFetch,\n  getTraceRequestPayload,\n  makeEventView,\n} from 'app/utils/performance/quickTrace/utils';\nimport withApi from 'app/utils/withApi';\n\ntype AdditionalQueryProps = {\n  eventId?: string;\n  detailed?: boolean;\n};\n\ntype TraceFullQueryChildrenProps<T> = BaseTraceChildrenProps &\n  Omit<FullQuickTrace, 'trace'> & {\n    /**\n     * The `event-trace` endpoint returns a full trace with the parent-child\n     * relationships. It can be flattened into a `QuickTraceEvent` if necessary.\n     */\n    traces: T | null;\n  };\n\ntype QueryProps<T> = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceFullQueryChildrenProps<T>) => React.ReactNode;\n  };\n\nfunction getTraceFullRequestPayload({\n  detailed,\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload: any = getTraceRequestPayload(props);\n  additionalApiPayload.detailed = detailed ? '1' : '0';\n  if (eventId) {\n    additionalApiPayload.event_id = eventId;\n  }\n  return additionalApiPayload;\n}\n\nfunction EmptyTrace<T>({children}: Pick<QueryProps<T>, 'children'>) {\n  return (\n    <React.Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        traces: null,\n        type: 'full',\n      })}\n    </React.Fragment>\n  );\n}\n\nfunction GenericTraceFullQuery<T>({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps<T>) {\n  if (!traceId) {\n    return <EmptyTrace<T>>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<T, AdditionalQueryProps>\n      route={`events-trace/${traceId}`}\n      getRequestPayload={getTraceFullRequestPayload}\n      beforeFetch={beforeFetch}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          traces: tableData || null,\n          type: 'full',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport const TraceFullQuery = withApi(\n  (props: Omit<QueryProps<TraceFull[]>, 'detailed'>) => (\n    <GenericTraceFullQuery<TraceFull[]> {...props} detailed={false} />\n  )\n);\n\nexport const TraceFullDetailedQuery = withApi(\n  (props: Omit<QueryProps<TraceFullDetailed[]>, 'detailed'>) => (\n    <GenericTraceFullQuery<TraceFullDetailed[]> {...props} detailed />\n  )\n);\n"],"sourceRoot":""}