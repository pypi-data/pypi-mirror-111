# Generated by Django 2.0.13 on 2019-07-11 02:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user_type', models.CharField(choices=[('tenant_applicant', '세입자 지원자'), ('investor_applicant', '투자자 지원자'), ('investor', '투자자'), ('tenant', '세입자')], max_length=20, verbose_name='유저타입')),
                ('first_name', models.CharField(max_length=30, verbose_name='이름')),
                ('last_name', models.CharField(max_length=30, verbose_name='성')),
                ('date_of_birth', models.CharField(max_length=1500, verbose_name='Date of Birth')),
                ('nationality', models.CharField(choices=[('KR', '한국'), ('US', '미국'), ('VIE', '베트남'), ('ETC', '그 외')], max_length=15, verbose_name='국적')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone number')),
                ('occupation', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Occupation')),
                ('income', models.PositiveIntegerField(blank=True, null=True, verbose_name='수입')),
                ('credit_score', models.CharField(blank=True, max_length=10, null=True, verbose_name='신용등급')),
                ('emergency_contact', models.CharField(blank=True, max_length=300, null=True, verbose_name='비상연락망')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('coupon_number_range', models.CharField(blank=True, max_length=100, null=True)),
                ('coupon_number_all', models.TextField(blank=True, null=True)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CouponRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('coupon_number', models.CharField(max_length=100)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered', to='users.Coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExitRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('name', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Name')),
                ('age', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Age')),
                ('occupation', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Occupation')),
                ('invest_survey', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Familiar with Investment')),
                ('intention', models.NullBooleanField(default=None, verbose_name='Would you invest')),
                ('amount', models.FloatField(blank=True, default=None, null=True, verbose_name='If yes, how much?')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
