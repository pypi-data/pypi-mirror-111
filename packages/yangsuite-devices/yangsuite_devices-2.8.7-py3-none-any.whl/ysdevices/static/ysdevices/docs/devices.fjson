{"parents": [], "prev": {"link": "../", "title": "Device Profiles"}, "next": null, "title": "Managing device profiles", "meta": {}, "body": "<div class=\"section\" id=\"managing-device-profiles\">\n<h1>Managing device profiles<a class=\"headerlink\" href=\"#managing-device-profiles\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"defining-a-device-profile\">\n<h2>Defining a device profile<a class=\"headerlink\" href=\"#defining-a-device-profile\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ol class=\"arabic simple\">\n<li>From the sidebar on any YANG Suite page, select \u201cSetup \u2192 Device profiles\u201d.</li>\n<li>On the newly loaded page, select \u201cNew Profile.\u201d\nA form will appear for you to enter the device information into.</li>\n<li>Enter a name for this device profile.</li>\n<li>Fill in all of the required fields under \u201cGeneral device information.\u201d\nThe address, username, and password you enter here will be used as\ndefault values for any specific connection method (SSH, NETCONF, etc.).</li>\n<li>For \u201cDevice supports the following,\u201d check all of the connection methods\nthat your device supports (SSH, NETCONF, etc.)</li>\n<li>Each of these methods will use method-specific defaults\n(e.g., port 22 for SSH) plus the parameters you entered under\n\u201cGeneral device information.\u201d If you want to change any of these defaults,\nselect the appropriate tab (such as \u201cNETCONF\u201d)\nto display its options, and make changes as needed to override the\ninherited defaults.</li>\n<li>Once this is done, you may use the \u201cCheck connectivity\u201d button\nto confirm that the device is reachable by ping and\nby the access mode(s) you have enabled.\nThis will take a moment then report the results of this check.\nIf any checks failed, you should investigate to determine why\nand make corrections to the device profile as needed.</li>\n<li>Once you are satisfied that the device profile is properly\ndefined, select \u201cSave new device profile\u201d to save this profile.</li>\n<li>You can now use this saved profile wherever YANG Suite requires one,\nsuch as downloading YANG modules from a device or sending NETCONF RPCs\nto a device.</li>\n</ol>\n</div>\n<div class=\"section\" id=\"creating-a-default-repository-and-yangset\">\n<h2>Creating a Default Repository and Yangset<a class=\"headerlink\" href=\"#creating-a-default-repository-and-yangset\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When first setting up a device profile, the next step many users do is download\nall YANG files from the new device creating a repository, and then creating a Yangset\ncarved out of the new repository.  By clicking on \u201cCreate Default Repository and Yangset\u201d\nthe download begins, a repository is created, and a Yangset containing all the YANG\nfiles in the repository is created.  This allows the user to go right to work with an\navailable Yangset.</p>\n</div>\n<div class=\"section\" id=\"managing-existing-device-profiles\">\n<h2>Managing existing device profiles<a class=\"headerlink\" href=\"#managing-existing-device-profiles\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>From the same \u201cSetup \u2192 Device profiles\u201d page,\nyou can manage the existing device profiles. Select any device profile from\nthe list on the right side of the page, and you can then re-check its\nconnectivity, make changes to it, clone it into a new device profile, or\ndelete it if no longer needed.</p>\n</div>\n</div>\n<div class=\"section\" id=\"setting-up-yang-suite-tls-ssl\">\n<h1>Setting up YANG Suite TLS/SSL<a class=\"headerlink\" href=\"#setting-up-yang-suite-tls-ssl\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>A user can use any naming convention they want for cryptography keys and certificate\nfiles, so it is best to have a general understanding of them.  We will not go into the\ndifferent types of encryption, but basically, you want to use the strongest possible\nthat both the client and device can understand.</p>\n<div class=\"section\" id=\"public-certificate-authority\">\n<h2>Public Certificate Authority<a class=\"headerlink\" href=\"#public-certificate-authority\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li><strong>TLS Root Key</strong> \u2013 openssl key used to create <strong>TLS Root Certificate</strong></li>\n<li><strong>TLS Root Certificate</strong> \u2013 Common certificate created using the <strong>TLS Root Key</strong> (used as the common link between a device and a client certificate).</li>\n<li><strong>TLS Root Chain</strong> \u2013 A list of <strong>TLS Root Certificates</strong> (allows for multiple certificates to authenticate against)</li>\n</ul>\n</div>\n<div class=\"section\" id=\"client-for-example-yang-suite\">\n<h2>Client (for example, YANG Suite)<a class=\"headerlink\" href=\"#client-for-example-yang-suite\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li><strong>TLS Client Key</strong> \u2013 The openssl key used to create the <strong>TLS Client Certificate</strong></li>\n<li><strong>TLS Client Certificate</strong> \u2013 Certificate created using the <strong>TLS Client Key</strong> and the <strong>TLS Root Certificate</strong></li>\n</ul>\n</div>\n<div class=\"section\" id=\"device-for-example-cisco-router\">\n<h2>Device (for example, Cisco router)<a class=\"headerlink\" href=\"#device-for-example-cisco-router\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li><strong>TLS Device Key</strong> \u2013 openssl key used to create <strong>TLS Device Certificate</strong></li>\n<li><strong>TLS Device Certificate</strong> \u2013 router (referred to as \u201cdevice\u201d) certificate which is created using <strong>TLS Device Key</strong> and <strong>TLS Root Certificate</strong>.</li>\n</ul>\n<p>In a real world setting it is likely that the <strong>TLS Root Certificate</strong> or <strong>TLS Root Chain</strong> is\nstored on public root authority servers and not on the Cisco router itself.</p>\n</div>\n<div class=\"section\" id=\"tls-host-override\">\n<h2>TLS Host Override<a class=\"headerlink\" href=\"#tls-host-override\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When creating a certificate, you are prompted for input such as City, State, etc..  When\nit gets to CN (common name) you can enter the IP Address or the FQDN (host/domain name).\nIf you setup your certificate to use the FQDN, the connection to a third party will\nauthenticate against that.  If the server hosting the TLS Root Certificate or Chain cannot\nassociate the requesters IP Address to the FQDN, the connection is refused.</p>\n<p>So should I set the CN to an IP Address on my certificate?  Sure, if you are confident the\nIP Address will not change as a result of using DHCP or a VPN connection and server hosting\nthe root receives my request on the same IP Address.</p>\n<p>So should I set the CN to a FQDN?  Sure, if the FQDN can be associated to the IP Address by\na DNS server, or from the /etc/hosts file on the server hosting the root.</p>\n<p>So should I just leave CN blank?  Sure, if you do not enter a challenge password when generating\nthe client or device certificate.</p>\n</div>\n<div class=\"section\" id=\"what-do-we-end-up-with\">\n<h2>What do we end up with?<a class=\"headerlink\" href=\"#what-do-we-end-up-with\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A TLS Root Certificate  that can be validated by 2 different keys.  The Root certificate\nauthority can now act as a go-between for 2 devices, eventually authorizing their connection.</p>\n</div>\n<div class=\"section\" id=\"is-yang-suite-setup-overkill\">\n<h2>Is YANG Suite Setup Overkill?<a class=\"headerlink\" href=\"#is-yang-suite-setup-overkill\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Well, yes, kind of.  If you think about it, if the client has the TLS Root Certificate or Chain,\nthe client can use that to authenticate a device connection if the device has a certificate\ncreated using the same TLS Root Certificate or Chain.  The YANG Suite client can actually make a\nsuccessful connection to the device having only the TLS Root Certificate or Chain.  But, by\nhaving all 3 files available, this allows YANG Suite to act as a client, a root authority, or a device.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["index", "Device Profiles", "P", "previous"]], "sourcename": "devices.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Managing device profiles</a><ul>\n<li><a class=\"reference internal\" href=\"#defining-a-device-profile\">Defining a device profile</a></li>\n<li><a class=\"reference internal\" href=\"#creating-a-default-repository-and-yangset\">Creating a Default Repository and Yangset</a></li>\n<li><a class=\"reference internal\" href=\"#managing-existing-device-profiles\">Managing existing device profiles</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#setting-up-yang-suite-tls-ssl\">Setting up YANG Suite TLS/SSL</a><ul>\n<li><a class=\"reference internal\" href=\"#public-certificate-authority\">Public Certificate Authority</a></li>\n<li><a class=\"reference internal\" href=\"#client-for-example-yang-suite\">Client (for example, YANG Suite)</a></li>\n<li><a class=\"reference internal\" href=\"#device-for-example-cisco-router\">Device (for example, Cisco router)</a></li>\n<li><a class=\"reference internal\" href=\"#tls-host-override\">TLS Host Override</a></li>\n<li><a class=\"reference internal\" href=\"#what-do-we-end-up-with\">What do we end up with?</a></li>\n<li><a class=\"reference internal\" href=\"#is-yang-suite-setup-overkill\">Is YANG Suite Setup Overkill?</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "devices", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.12"}