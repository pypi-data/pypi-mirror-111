Metadata-Version: 2.1
Name: pywarping
Version: 0.2
Summary: Automated face warping tool
Home-page: https://github.com/dopevog/pywarping
Author: Vedant Kothari
Author-email: dopevog@gmail.com
License: MIT
Project-URL: Bug Tracker, https://github.com/dopevog/pywarping/issues
Project-URL: Documentation, https://pywarping.readthedocs.io
Project-URL: Source Code, https://github.com/dopevog/pywarping
Description: # PyWarping
        **Python module for face feature changing**
        
        ## Installation
        
        ```bash
        pip install pywarping
        ```
        
        If you get an error: `No such file or directory: 'cmake': 'cmake'`, you
        need to make sure [cmake](www.cmake.org) is installed.  If you're on OSX you can install this via
        Homebrew with:
        
        ```shell
        brew install cmake
        ```
        
        For other platforms please consult the Cmake documentation at <https://cmake.org/install/>
        
        ## Usage
        For each face in an image define what **actions** are to be performed on it, `pywarping` will do the rest.
        Check out the docs [here](https://github.com/dopevog/pywarping/tree/master/docs).
        ### Minimal Example
        ```python
        import matplotlib.pyplot as plt
        
        from pywarping.actions import Chubby, Multiple, Pipeline, Smile
        from pywarping.detect import LandmarkFace
        
        img_path = 'path/to/your/image'
        img = plt.imread(img_path)
        
        lf = LandmarkFace.estimate(img)
        
        a_per_face = Pipeline([Chubby(), Smile()])
        a_all = Multiple(a_per_face)
        
        new_lf, _ = a_all.perform(lf)
        new_lf.plot(show_landmarks=False, show_numbers=False)
        ```
        
        ### CLI
        `pywarping` also comes with a CLI that exposes some
        of its functionality. You can list the commands with `pw --help`:
        
        ```text
        Usage: pw [OPTIONS] COMMAND [ARGS]...
        
          Automated face warping tool.
        
        Options:
          --help  Show this message and exit.
        
        Commands:
          list     List available actions.
          perform  Take an action.
        ```
        
        To perform an action (Smile in the example below) and plot the result on the screen 
        ```bash
        pw perform Smile INPUT_IMG_PATH
        ```
        
        or if you want to create a new image and save it
        ```bash
        pw perform Smile INPUT_IMG_PATH OUTPUT_IMG_PATH
        ```
        
        ## Notes
        By default we are using a pretrained landmark model from https://github.com/davisking/dlib-models.
        
        ## License
        This Project Has Been [MIT Licensed](LICENSE)
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: C
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: docs
